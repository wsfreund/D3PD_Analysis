//
// File generated by rootcint at Mon Oct 29 01:54:39 2012

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME rootdic
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "rootdic.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      namespace Root {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Root::TUniqueGRLString TUniqueGRLString;
      #else
      class TUniqueGRLString  :  public ::TString {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TUniqueGRLString() throw() {};
      };
      #endif
      } 
      namespace Root {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Root::TGoodRun TGoodRun;
      #else
      class TGoodRun  :  public vector< ::Root::TLumiBlockRange, allocator< ::Root::TLumiBlockRange >  >,  public ::TObject {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::Root::TGoodRun::SorterL2H SorterL2H;
         #else
         class SorterL2H  {
            public:
            //friend XX;
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~TGoodRun() throw() {};
      };
      #endif
      } 
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace GRLStrUtil {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void GRLStrUtil_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("GRLStrUtil", 0 /*version*/, "./StrUtil.h", 7,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &GRLStrUtil_Dictionary, 4);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void GRLStrUtil_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace Root {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void Root_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("Root", 0 /*version*/, "./TGoodRunsListReader.h", 25,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &Root_Dictionary, 4);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void Root_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOT {
   void RootcLcLTMsgLogger_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RootcLcLTMsgLogger(void *p = 0);
   static void *newArray_RootcLcLTMsgLogger(Long_t size, void *p);
   static void delete_RootcLcLTMsgLogger(void *p);
   static void deleteArray_RootcLcLTMsgLogger(void *p);
   static void destruct_RootcLcLTMsgLogger(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Root::TMsgLogger*)
   {
      ::Root::TMsgLogger *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Root::TMsgLogger >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Root::TMsgLogger", ::Root::TMsgLogger::Class_Version(), "./TMsgLogger.h", 43,
                  typeid(::Root::TMsgLogger), DefineBehavior(ptr, ptr),
                  &::Root::TMsgLogger::Dictionary, isa_proxy, 4,
                  sizeof(::Root::TMsgLogger) );
      instance.SetNew(&new_RootcLcLTMsgLogger);
      instance.SetNewArray(&newArray_RootcLcLTMsgLogger);
      instance.SetDelete(&delete_RootcLcLTMsgLogger);
      instance.SetDeleteArray(&deleteArray_RootcLcLTMsgLogger);
      instance.SetDestructor(&destruct_RootcLcLTMsgLogger);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Root::TMsgLogger*)
   {
      return GenerateInitInstanceLocal((::Root::TMsgLogger*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Root::TMsgLogger*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RootcLcLTUniqueGRLString_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void RootcLcLTUniqueGRLString_Dictionary();

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Root::TUniqueGRLString*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Root::TUniqueGRLString) == sizeof(::ROOT::Shadow::Root::TUniqueGRLString));
      ::Root::TUniqueGRLString *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Root::TUniqueGRLString),0);
      static ::ROOT::TGenericClassInfo 
         instance("Root::TUniqueGRLString", "./TUniqueGRLString.h", 8,
                  typeid(::Root::TUniqueGRLString), DefineBehavior(ptr, ptr),
                  &RootcLcLTUniqueGRLString_ShowMembers, &RootcLcLTUniqueGRLString_Dictionary, isa_proxy, 4,
                  sizeof(::Root::TUniqueGRLString) );
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Root::TUniqueGRLString*)
   {
      return GenerateInitInstanceLocal((::Root::TUniqueGRLString*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Root::TUniqueGRLString*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void RootcLcLTUniqueGRLString_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::Root::TUniqueGRLString*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void RootcLcLTLumiBlockRange_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RootcLcLTLumiBlockRange(void *p = 0);
   static void *newArray_RootcLcLTLumiBlockRange(Long_t size, void *p);
   static void delete_RootcLcLTLumiBlockRange(void *p);
   static void deleteArray_RootcLcLTLumiBlockRange(void *p);
   static void destruct_RootcLcLTLumiBlockRange(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Root::TLumiBlockRange*)
   {
      ::Root::TLumiBlockRange *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Root::TLumiBlockRange >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Root::TLumiBlockRange", ::Root::TLumiBlockRange::Class_Version(), "./TLumiBlockRange.h", 17,
                  typeid(::Root::TLumiBlockRange), DefineBehavior(ptr, ptr),
                  &::Root::TLumiBlockRange::Dictionary, isa_proxy, 4,
                  sizeof(::Root::TLumiBlockRange) );
      instance.SetNew(&new_RootcLcLTLumiBlockRange);
      instance.SetNewArray(&newArray_RootcLcLTLumiBlockRange);
      instance.SetDelete(&delete_RootcLcLTLumiBlockRange);
      instance.SetDeleteArray(&deleteArray_RootcLcLTLumiBlockRange);
      instance.SetDestructor(&destruct_RootcLcLTLumiBlockRange);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Root::TLumiBlockRange*)
   {
      return GenerateInitInstanceLocal((::Root::TLumiBlockRange*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Root::TLumiBlockRange*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RootcLcLTGoodRun_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RootcLcLTGoodRun(void *p = 0);
   static void *newArray_RootcLcLTGoodRun(Long_t size, void *p);
   static void delete_RootcLcLTGoodRun(void *p);
   static void deleteArray_RootcLcLTGoodRun(void *p);
   static void destruct_RootcLcLTGoodRun(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Root::TGoodRun*)
   {
      ::Root::TGoodRun *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Root::TGoodRun >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Root::TGoodRun", ::Root::TGoodRun::Class_Version(), "./TGoodRun.h", 18,
                  typeid(::Root::TGoodRun), DefineBehavior(ptr, ptr),
                  &::Root::TGoodRun::Dictionary, isa_proxy, 4,
                  sizeof(::Root::TGoodRun) );
      instance.SetNew(&new_RootcLcLTGoodRun);
      instance.SetNewArray(&newArray_RootcLcLTGoodRun);
      instance.SetDelete(&delete_RootcLcLTGoodRun);
      instance.SetDeleteArray(&deleteArray_RootcLcLTGoodRun);
      instance.SetDestructor(&destruct_RootcLcLTGoodRun);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Root::TGoodRun*)
   {
      return GenerateInitInstanceLocal((::Root::TGoodRun*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Root::TGoodRun*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RootcLcLTGoodRuncLcLSorterL2H_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void RootcLcLTGoodRuncLcLSorterL2H_Dictionary();
   static void *new_RootcLcLTGoodRuncLcLSorterL2H(void *p = 0);
   static void *newArray_RootcLcLTGoodRuncLcLSorterL2H(Long_t size, void *p);
   static void delete_RootcLcLTGoodRuncLcLSorterL2H(void *p);
   static void deleteArray_RootcLcLTGoodRuncLcLSorterL2H(void *p);
   static void destruct_RootcLcLTGoodRuncLcLSorterL2H(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Root::TGoodRun::SorterL2H*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Root::TGoodRun::SorterL2H) == sizeof(::ROOT::Shadow::Root::TGoodRun::SorterL2H));
      ::Root::TGoodRun::SorterL2H *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Root::TGoodRun::SorterL2H),0);
      static ::ROOT::TGenericClassInfo 
         instance("Root::TGoodRun::SorterL2H", "./TGoodRun.h", 52,
                  typeid(::Root::TGoodRun::SorterL2H), DefineBehavior(ptr, ptr),
                  &RootcLcLTGoodRuncLcLSorterL2H_ShowMembers, &RootcLcLTGoodRuncLcLSorterL2H_Dictionary, isa_proxy, 4,
                  sizeof(::Root::TGoodRun::SorterL2H) );
      instance.SetNew(&new_RootcLcLTGoodRuncLcLSorterL2H);
      instance.SetNewArray(&newArray_RootcLcLTGoodRuncLcLSorterL2H);
      instance.SetDelete(&delete_RootcLcLTGoodRuncLcLSorterL2H);
      instance.SetDeleteArray(&deleteArray_RootcLcLTGoodRuncLcLSorterL2H);
      instance.SetDestructor(&destruct_RootcLcLTGoodRuncLcLSorterL2H);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Root::TGoodRun::SorterL2H*)
   {
      return GenerateInitInstanceLocal((::Root::TGoodRun::SorterL2H*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Root::TGoodRun::SorterL2H*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void RootcLcLTGoodRuncLcLSorterL2H_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::Root::TGoodRun::SorterL2H*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void RootcLcLTGoodRunsList_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RootcLcLTGoodRunsList(void *p = 0);
   static void *newArray_RootcLcLTGoodRunsList(Long_t size, void *p);
   static void delete_RootcLcLTGoodRunsList(void *p);
   static void deleteArray_RootcLcLTGoodRunsList(void *p);
   static void destruct_RootcLcLTGoodRunsList(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Root::TGoodRunsList*)
   {
      ::Root::TGoodRunsList *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Root::TGoodRunsList >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Root::TGoodRunsList", ::Root::TGoodRunsList::Class_Version(), "./TGoodRunsList.h", 21,
                  typeid(::Root::TGoodRunsList), DefineBehavior(ptr, ptr),
                  &::Root::TGoodRunsList::Dictionary, isa_proxy, 4,
                  sizeof(::Root::TGoodRunsList) );
      instance.SetNew(&new_RootcLcLTGoodRunsList);
      instance.SetNewArray(&newArray_RootcLcLTGoodRunsList);
      instance.SetDelete(&delete_RootcLcLTGoodRunsList);
      instance.SetDeleteArray(&deleteArray_RootcLcLTGoodRunsList);
      instance.SetDestructor(&destruct_RootcLcLTGoodRunsList);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Root::TGoodRunsList*)
   {
      return GenerateInitInstanceLocal((::Root::TGoodRunsList*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Root::TGoodRunsList*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RootcLcLTGRLCollection_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RootcLcLTGRLCollection(void *p = 0);
   static void *newArray_RootcLcLTGRLCollection(Long_t size, void *p);
   static void delete_RootcLcLTGRLCollection(void *p);
   static void deleteArray_RootcLcLTGRLCollection(void *p);
   static void destruct_RootcLcLTGRLCollection(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Root::TGRLCollection*)
   {
      ::Root::TGRLCollection *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Root::TGRLCollection >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Root::TGRLCollection", ::Root::TGRLCollection::Class_Version(), "./TGRLCollection.h", 20,
                  typeid(::Root::TGRLCollection), DefineBehavior(ptr, ptr),
                  &::Root::TGRLCollection::Dictionary, isa_proxy, 4,
                  sizeof(::Root::TGRLCollection) );
      instance.SetNew(&new_RootcLcLTGRLCollection);
      instance.SetNewArray(&newArray_RootcLcLTGRLCollection);
      instance.SetDelete(&delete_RootcLcLTGRLCollection);
      instance.SetDeleteArray(&deleteArray_RootcLcLTGRLCollection);
      instance.SetDestructor(&destruct_RootcLcLTGRLCollection);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Root::TGRLCollection*)
   {
      return GenerateInitInstanceLocal((::Root::TGRLCollection*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Root::TGRLCollection*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RootcLcLTGoodRunsListReader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RootcLcLTGoodRunsListReader(void *p = 0);
   static void *newArray_RootcLcLTGoodRunsListReader(Long_t size, void *p);
   static void delete_RootcLcLTGoodRunsListReader(void *p);
   static void deleteArray_RootcLcLTGoodRunsListReader(void *p);
   static void destruct_RootcLcLTGoodRunsListReader(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Root::TGoodRunsListReader*)
   {
      ::Root::TGoodRunsListReader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Root::TGoodRunsListReader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Root::TGoodRunsListReader", ::Root::TGoodRunsListReader::Class_Version(), "./TGoodRunsListReader.h", 32,
                  typeid(::Root::TGoodRunsListReader), DefineBehavior(ptr, ptr),
                  &::Root::TGoodRunsListReader::Dictionary, isa_proxy, 4,
                  sizeof(::Root::TGoodRunsListReader) );
      instance.SetNew(&new_RootcLcLTGoodRunsListReader);
      instance.SetNewArray(&newArray_RootcLcLTGoodRunsListReader);
      instance.SetDelete(&delete_RootcLcLTGoodRunsListReader);
      instance.SetDeleteArray(&deleteArray_RootcLcLTGoodRunsListReader);
      instance.SetDestructor(&destruct_RootcLcLTGoodRunsListReader);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Root::TGoodRunsListReader*)
   {
      return GenerateInitInstanceLocal((::Root::TGoodRunsListReader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Root::TGoodRunsListReader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

      namespace Root {
//______________________________________________________________________________
TClass *TMsgLogger::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TMsgLogger::Class_Name()
{
   return "Root::TMsgLogger";
}

//______________________________________________________________________________
const char *TMsgLogger::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Root::TMsgLogger*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMsgLogger::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Root::TMsgLogger*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMsgLogger::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Root::TMsgLogger*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMsgLogger::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Root::TMsgLogger*)0x0)->GetClass();
   return fgIsA;
}

} // namespace Root
      namespace Root {
//______________________________________________________________________________
TClass *TLumiBlockRange::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TLumiBlockRange::Class_Name()
{
   return "Root::TLumiBlockRange";
}

//______________________________________________________________________________
const char *TLumiBlockRange::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Root::TLumiBlockRange*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TLumiBlockRange::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Root::TLumiBlockRange*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TLumiBlockRange::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Root::TLumiBlockRange*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TLumiBlockRange::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Root::TLumiBlockRange*)0x0)->GetClass();
   return fgIsA;
}

} // namespace Root
      namespace Root {
//______________________________________________________________________________
TClass *TGoodRun::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGoodRun::Class_Name()
{
   return "Root::TGoodRun";
}

//______________________________________________________________________________
const char *TGoodRun::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Root::TGoodRun*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGoodRun::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Root::TGoodRun*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGoodRun::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Root::TGoodRun*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGoodRun::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Root::TGoodRun*)0x0)->GetClass();
   return fgIsA;
}

} // namespace Root
      namespace Root {
//______________________________________________________________________________
TClass *TGoodRunsList::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGoodRunsList::Class_Name()
{
   return "Root::TGoodRunsList";
}

//______________________________________________________________________________
const char *TGoodRunsList::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Root::TGoodRunsList*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGoodRunsList::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Root::TGoodRunsList*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGoodRunsList::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Root::TGoodRunsList*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGoodRunsList::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Root::TGoodRunsList*)0x0)->GetClass();
   return fgIsA;
}

} // namespace Root
      namespace Root {
//______________________________________________________________________________
TClass *TGRLCollection::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGRLCollection::Class_Name()
{
   return "Root::TGRLCollection";
}

//______________________________________________________________________________
const char *TGRLCollection::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Root::TGRLCollection*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGRLCollection::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Root::TGRLCollection*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGRLCollection::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Root::TGRLCollection*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGRLCollection::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Root::TGRLCollection*)0x0)->GetClass();
   return fgIsA;
}

} // namespace Root
      namespace Root {
//______________________________________________________________________________
TClass *TGoodRunsListReader::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGoodRunsListReader::Class_Name()
{
   return "Root::TGoodRunsListReader";
}

//______________________________________________________________________________
const char *TGoodRunsListReader::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Root::TGoodRunsListReader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGoodRunsListReader::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Root::TGoodRunsListReader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGoodRunsListReader::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Root::TGoodRunsListReader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGoodRunsListReader::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Root::TGoodRunsListReader*)0x0)->GetClass();
   return fgIsA;
}

} // namespace Root
      namespace Root {
//______________________________________________________________________________
void TMsgLogger::Streamer(TBuffer &R__b)
{
   // Stream an object of class Root::TMsgLogger.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Root::TMsgLogger::Class(),this);
   } else {
      R__b.WriteClassBuffer(Root::TMsgLogger::Class(),this);
   }
}

} // namespace Root
//______________________________________________________________________________
      namespace Root {
void TMsgLogger::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Root::TMsgLogger.
      TClass *R__cl = ::Root::TMsgLogger::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_objSource", &m_objSource);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_strSource", (void*)&m_strSource);
      R__insp.InspectMember("string", (void*)&m_strSource, "m_strSource.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_prefix", (void*)&m_prefix);
      R__insp.InspectMember("const string", (void*)&m_prefix, "m_prefix.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_suffix", (void*)&m_suffix);
      R__insp.InspectMember("const string", (void*)&m_suffix, "m_suffix.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_activeLevel", &m_activeLevel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_maxSourceSize", &m_maxSourceSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_levelMap", (void*)&m_levelMap);
      R__insp.InspectMember("map<TMsgLevel,std::string>", (void*)&m_levelMap, "m_levelMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_colorMap", (void*)&m_colorMap);
      R__insp.InspectMember("map<TMsgLevel,std::string>", (void*)&m_colorMap, "m_colorMap.", false);
      R__insp.GenericShowMembers("basic_ostringstream<char,char_traits<char>,allocator<char> >", ( ::basic_ostringstream<char,char_traits<char>,allocator<char> > *) (this ), false);
      TObject::ShowMembers(R__insp);
}

} // namespace Root
namespace ROOT {
   // Wrappers around operator new
   static void *new_RootcLcLTMsgLogger(void *p) {
      return  p ? new(p) ::Root::TMsgLogger : new ::Root::TMsgLogger;
   }
   static void *newArray_RootcLcLTMsgLogger(Long_t nElements, void *p) {
      return p ? new(p) ::Root::TMsgLogger[nElements] : new ::Root::TMsgLogger[nElements];
   }
   // Wrapper around operator delete
   static void delete_RootcLcLTMsgLogger(void *p) {
      delete ((::Root::TMsgLogger*)p);
   }
   static void deleteArray_RootcLcLTMsgLogger(void *p) {
      delete [] ((::Root::TMsgLogger*)p);
   }
   static void destruct_RootcLcLTMsgLogger(void *p) {
      typedef ::Root::TMsgLogger current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Root::TMsgLogger

//______________________________________________________________________________
namespace ROOT {
   void RootcLcLTUniqueGRLString_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Root::TUniqueGRLString.
      typedef ::ROOT::Shadow::Root::TUniqueGRLString ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::Root::TUniqueGRLString*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      sobj->TString::ShowMembers(R__insp);
   }

}

namespace ROOT {
} // end of namespace ROOT for class ::Root::TUniqueGRLString

      namespace Root {
//______________________________________________________________________________
void TLumiBlockRange::Streamer(TBuffer &R__b)
{
   // Stream an object of class Root::TLumiBlockRange.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Root::TLumiBlockRange::Class(),this);
   } else {
      R__b.WriteClassBuffer(Root::TLumiBlockRange::Class(),this);
   }
}

} // namespace Root
//______________________________________________________________________________
      namespace Root {
void TLumiBlockRange::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Root::TLumiBlockRange.
      TClass *R__cl = ::Root::TLumiBlockRange::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_begin", &m_begin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_end", &m_end);
      TObject::ShowMembers(R__insp);
}

} // namespace Root
namespace ROOT {
   // Wrappers around operator new
   static void *new_RootcLcLTLumiBlockRange(void *p) {
      return  p ? new(p) ::Root::TLumiBlockRange : new ::Root::TLumiBlockRange;
   }
   static void *newArray_RootcLcLTLumiBlockRange(Long_t nElements, void *p) {
      return p ? new(p) ::Root::TLumiBlockRange[nElements] : new ::Root::TLumiBlockRange[nElements];
   }
   // Wrapper around operator delete
   static void delete_RootcLcLTLumiBlockRange(void *p) {
      delete ((::Root::TLumiBlockRange*)p);
   }
   static void deleteArray_RootcLcLTLumiBlockRange(void *p) {
      delete [] ((::Root::TLumiBlockRange*)p);
   }
   static void destruct_RootcLcLTLumiBlockRange(void *p) {
      typedef ::Root::TLumiBlockRange current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Root::TLumiBlockRange

      namespace Root {
//______________________________________________________________________________
void TGoodRun::Streamer(TBuffer &R__b)
{
   // Stream an object of class Root::TGoodRun.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Root::TGoodRun::Class(),this);
   } else {
      R__b.WriteClassBuffer(Root::TGoodRun::Class(),this);
   }
}

} // namespace Root
//______________________________________________________________________________
      namespace Root {
void TGoodRun::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Root::TGoodRun.
      TClass *R__cl = ::Root::TGoodRun::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_runnr", &m_runnr);
      R__insp.GenericShowMembers("vector<Root::TLumiBlockRange,allocator<Root::TLumiBlockRange> >", ( ::vector<Root::TLumiBlockRange,allocator<Root::TLumiBlockRange> > *) (this ), false);
      TObject::ShowMembers(R__insp);
}

} // namespace Root
namespace ROOT {
   // Wrappers around operator new
   static void *new_RootcLcLTGoodRun(void *p) {
      return  p ? new(p) ::Root::TGoodRun : new ::Root::TGoodRun;
   }
   static void *newArray_RootcLcLTGoodRun(Long_t nElements, void *p) {
      return p ? new(p) ::Root::TGoodRun[nElements] : new ::Root::TGoodRun[nElements];
   }
   // Wrapper around operator delete
   static void delete_RootcLcLTGoodRun(void *p) {
      delete ((::Root::TGoodRun*)p);
   }
   static void deleteArray_RootcLcLTGoodRun(void *p) {
      delete [] ((::Root::TGoodRun*)p);
   }
   static void destruct_RootcLcLTGoodRun(void *p) {
      typedef ::Root::TGoodRun current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Root::TGoodRun

//______________________________________________________________________________
namespace ROOT {
   void RootcLcLTGoodRuncLcLSorterL2H_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Root::TGoodRun::SorterL2H.
      typedef ::ROOT::Shadow::Root::TGoodRun::SorterL2H ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::Root::TGoodRun::SorterL2H*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RootcLcLTGoodRuncLcLSorterL2H(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Root::TGoodRun::SorterL2H : new ::Root::TGoodRun::SorterL2H;
   }
   static void *newArray_RootcLcLTGoodRuncLcLSorterL2H(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Root::TGoodRun::SorterL2H[nElements] : new ::Root::TGoodRun::SorterL2H[nElements];
   }
   // Wrapper around operator delete
   static void delete_RootcLcLTGoodRuncLcLSorterL2H(void *p) {
      delete ((::Root::TGoodRun::SorterL2H*)p);
   }
   static void deleteArray_RootcLcLTGoodRuncLcLSorterL2H(void *p) {
      delete [] ((::Root::TGoodRun::SorterL2H*)p);
   }
   static void destruct_RootcLcLTGoodRuncLcLSorterL2H(void *p) {
      typedef ::Root::TGoodRun::SorterL2H current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Root::TGoodRun::SorterL2H

      namespace Root {
//______________________________________________________________________________
void TGoodRunsList::Streamer(TBuffer &R__b)
{
   // Stream an object of class Root::TGoodRunsList.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Root::TGoodRunsList::Class(),this);
   } else {
      R__b.WriteClassBuffer(Root::TGoodRunsList::Class(),this);
   }
}

} // namespace Root
//______________________________________________________________________________
      namespace Root {
void TGoodRunsList::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Root::TGoodRunsList.
      TClass *R__cl = ::Root::TGoodRunsList::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_version", &m_version);
      R__insp.InspectMember(m_version, "m_version.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_metadata", (void*)&m_metadata);
      R__insp.InspectMember("map<TString,TString>", (void*)&m_metadata, "m_metadata.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_checkGRLInfo", &m_checkGRLInfo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_hasRun", &m_hasRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_hasLB", &m_hasLB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_prevRun", &m_prevRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_prevLB", &m_prevLB);
      R__insp.GenericShowMembers("map<int,Root::TGoodRun,less<int>,allocator<pair<const int,Root::TGoodRun> > >", ( ::map<int,Root::TGoodRun,less<int>,allocator<pair<const int,Root::TGoodRun> > > *) (this ), false);
      TNamed::ShowMembers(R__insp);
}

} // namespace Root
namespace ROOT {
   // Wrappers around operator new
   static void *new_RootcLcLTGoodRunsList(void *p) {
      return  p ? new(p) ::Root::TGoodRunsList : new ::Root::TGoodRunsList;
   }
   static void *newArray_RootcLcLTGoodRunsList(Long_t nElements, void *p) {
      return p ? new(p) ::Root::TGoodRunsList[nElements] : new ::Root::TGoodRunsList[nElements];
   }
   // Wrapper around operator delete
   static void delete_RootcLcLTGoodRunsList(void *p) {
      delete ((::Root::TGoodRunsList*)p);
   }
   static void deleteArray_RootcLcLTGoodRunsList(void *p) {
      delete [] ((::Root::TGoodRunsList*)p);
   }
   static void destruct_RootcLcLTGoodRunsList(void *p) {
      typedef ::Root::TGoodRunsList current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Root::TGoodRunsList

      namespace Root {
//______________________________________________________________________________
void TGRLCollection::Streamer(TBuffer &R__b)
{
   // Stream an object of class Root::TGRLCollection.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Root::TGRLCollection::Class(),this);
   } else {
      R__b.WriteClassBuffer(Root::TGRLCollection::Class(),this);
   }
}

} // namespace Root
//______________________________________________________________________________
      namespace Root {
void TGRLCollection::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Root::TGRLCollection.
      TClass *R__cl = ::Root::TGRLCollection::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_checkGRLInfo", &m_checkGRLInfo);
      R__insp.GenericShowMembers("vector<Root::TGoodRunsList,allocator<Root::TGoodRunsList> >", ( ::vector<Root::TGoodRunsList,allocator<Root::TGoodRunsList> > *) (this ), false);
      TObject::ShowMembers(R__insp);
}

} // namespace Root
namespace ROOT {
   // Wrappers around operator new
   static void *new_RootcLcLTGRLCollection(void *p) {
      return  p ? new(p) ::Root::TGRLCollection : new ::Root::TGRLCollection;
   }
   static void *newArray_RootcLcLTGRLCollection(Long_t nElements, void *p) {
      return p ? new(p) ::Root::TGRLCollection[nElements] : new ::Root::TGRLCollection[nElements];
   }
   // Wrapper around operator delete
   static void delete_RootcLcLTGRLCollection(void *p) {
      delete ((::Root::TGRLCollection*)p);
   }
   static void deleteArray_RootcLcLTGRLCollection(void *p) {
      delete [] ((::Root::TGRLCollection*)p);
   }
   static void destruct_RootcLcLTGRLCollection(void *p) {
      typedef ::Root::TGRLCollection current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Root::TGRLCollection

      namespace Root {
//______________________________________________________________________________
void TGoodRunsListReader::Streamer(TBuffer &R__b)
{
   // Stream an object of class Root::TGoodRunsListReader.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Root::TGoodRunsListReader::Class(),this);
   } else {
      R__b.WriteClassBuffer(Root::TGoodRunsListReader::Class(),this);
   }
}

} // namespace Root
//______________________________________________________________________________
      namespace Root {
void TGoodRunsListReader::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Root::TGoodRunsListReader.
      TClass *R__cl = ::Root::TGoodRunsListReader::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_xmlstring", &m_xmlstring);
      R__insp.InspectMember(m_xmlstring, "m_xmlstring.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_dataCardName", &m_dataCardName);
      R__insp.InspectMember(m_dataCardName, "m_dataCardName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_dataCardList", (void*)&m_dataCardList);
      R__insp.InspectMember("vector<TString>", (void*)&m_dataCardList, "m_dataCardList.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_xmlstringList", (void*)&m_xmlstringList);
      R__insp.InspectMember("vector<TString>", (void*)&m_xmlstringList, "m_xmlstringList.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_logger", &m_logger);
      R__insp.InspectMember(m_logger, "m_logger.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_grlvec", &m_grlvec);
      R__insp.InspectMember(m_grlvec, "m_grlvec.");
      TObject::ShowMembers(R__insp);
}

} // namespace Root
namespace ROOT {
   // Wrappers around operator new
   static void *new_RootcLcLTGoodRunsListReader(void *p) {
      return  p ? new(p) ::Root::TGoodRunsListReader : new ::Root::TGoodRunsListReader;
   }
   static void *newArray_RootcLcLTGoodRunsListReader(Long_t nElements, void *p) {
      return p ? new(p) ::Root::TGoodRunsListReader[nElements] : new ::Root::TGoodRunsListReader[nElements];
   }
   // Wrapper around operator delete
   static void delete_RootcLcLTGoodRunsListReader(void *p) {
      delete ((::Root::TGoodRunsListReader*)p);
   }
   static void deleteArray_RootcLcLTGoodRunsListReader(void *p) {
      delete [] ((::Root::TGoodRunsListReader*)p);
   }
   static void destruct_RootcLcLTGoodRunsListReader(void *p) {
      typedef ::Root::TGoodRunsListReader current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Root::TGoodRunsListReader

namespace ROOT {
   void maplETStringcOTStringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplETStringcOTStringgR_Dictionary();
   static void *new_maplETStringcOTStringgR(void *p = 0);
   static void *newArray_maplETStringcOTStringgR(Long_t size, void *p);
   static void delete_maplETStringcOTStringgR(void *p);
   static void deleteArray_maplETStringcOTStringgR(void *p);
   static void destruct_maplETStringcOTStringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<TString,TString>*)
   {
      map<TString,TString> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<TString,TString>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<TString,TString>", -2, "/Users/wsfreund/root/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<TString,TString>), DefineBehavior(ptr, ptr),
                  0, &maplETStringcOTStringgR_Dictionary, isa_proxy, 0,
                  sizeof(map<TString,TString>) );
      instance.SetNew(&new_maplETStringcOTStringgR);
      instance.SetNewArray(&newArray_maplETStringcOTStringgR);
      instance.SetDelete(&delete_maplETStringcOTStringgR);
      instance.SetDeleteArray(&deleteArray_maplETStringcOTStringgR);
      instance.SetDestructor(&destruct_maplETStringcOTStringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<TString,TString> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<TString,TString>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplETStringcOTStringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<TString,TString>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplETStringcOTStringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TString,TString> : new map<TString,TString>;
   }
   static void *newArray_maplETStringcOTStringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TString,TString>[nElements] : new map<TString,TString>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplETStringcOTStringgR(void *p) {
      delete ((map<TString,TString>*)p);
   }
   static void deleteArray_maplETStringcOTStringgR(void *p) {
      delete [] ((map<TString,TString>*)p);
   }
   static void destruct_maplETStringcOTStringgR(void *p) {
      typedef map<TString,TString> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<TString,TString>

namespace ROOT {
   void maplEintcORootcLcLTGoodRungR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcORootcLcLTGoodRungR_Dictionary();
   static void *new_maplEintcORootcLcLTGoodRungR(void *p = 0);
   static void *newArray_maplEintcORootcLcLTGoodRungR(Long_t size, void *p);
   static void delete_maplEintcORootcLcLTGoodRungR(void *p);
   static void deleteArray_maplEintcORootcLcLTGoodRungR(void *p);
   static void destruct_maplEintcORootcLcLTGoodRungR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<int,Root::TGoodRun>*)
   {
      map<int,Root::TGoodRun> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,Root::TGoodRun>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,Root::TGoodRun>", -2, "/Users/wsfreund/root/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<int,Root::TGoodRun>), DefineBehavior(ptr, ptr),
                  0, &maplEintcORootcLcLTGoodRungR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,Root::TGoodRun>) );
      instance.SetNew(&new_maplEintcORootcLcLTGoodRungR);
      instance.SetNewArray(&newArray_maplEintcORootcLcLTGoodRungR);
      instance.SetDelete(&delete_maplEintcORootcLcLTGoodRungR);
      instance.SetDeleteArray(&deleteArray_maplEintcORootcLcLTGoodRungR);
      instance.SetDestructor(&destruct_maplEintcORootcLcLTGoodRungR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<int,Root::TGoodRun> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,Root::TGoodRun>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcORootcLcLTGoodRungR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<int,Root::TGoodRun>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEintcORootcLcLTGoodRungR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,Root::TGoodRun> : new map<int,Root::TGoodRun>;
   }
   static void *newArray_maplEintcORootcLcLTGoodRungR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,Root::TGoodRun>[nElements] : new map<int,Root::TGoodRun>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcORootcLcLTGoodRungR(void *p) {
      delete ((map<int,Root::TGoodRun>*)p);
   }
   static void deleteArray_maplEintcORootcLcLTGoodRungR(void *p) {
      delete [] ((map<int,Root::TGoodRun>*)p);
   }
   static void destruct_maplEintcORootcLcLTGoodRungR(void *p) {
      typedef map<int,Root::TGoodRun> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<int,Root::TGoodRun>

namespace ROOT {
   void maplEstringcOboolgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOboolgR_Dictionary();
   static void *new_maplEstringcOboolgR(void *p = 0);
   static void *newArray_maplEstringcOboolgR(Long_t size, void *p);
   static void delete_maplEstringcOboolgR(void *p);
   static void deleteArray_maplEstringcOboolgR(void *p);
   static void destruct_maplEstringcOboolgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,bool>*)
   {
      map<string,bool> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,bool>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,bool>", -2, "/Users/wsfreund/root/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<string,bool>), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOboolgR_Dictionary, isa_proxy, 4,
                  sizeof(map<string,bool>) );
      instance.SetNew(&new_maplEstringcOboolgR);
      instance.SetNewArray(&newArray_maplEstringcOboolgR);
      instance.SetDelete(&delete_maplEstringcOboolgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOboolgR);
      instance.SetDestructor(&destruct_maplEstringcOboolgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,bool> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,bool>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOboolgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,bool>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOboolgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,bool> : new map<string,bool>;
   }
   static void *newArray_maplEstringcOboolgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,bool>[nElements] : new map<string,bool>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOboolgR(void *p) {
      delete ((map<string,bool>*)p);
   }
   static void deleteArray_maplEstringcOboolgR(void *p) {
      delete [] ((map<string,bool>*)p);
   }
   static void destruct_maplEstringcOboolgR(void *p) {
      typedef map<string,bool> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,bool>

namespace ROOT {
   void vectorlERootcLcLTGoodRunsListgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERootcLcLTGoodRunsListgR_Dictionary();
   static void *new_vectorlERootcLcLTGoodRunsListgR(void *p = 0);
   static void *newArray_vectorlERootcLcLTGoodRunsListgR(Long_t size, void *p);
   static void delete_vectorlERootcLcLTGoodRunsListgR(void *p);
   static void deleteArray_vectorlERootcLcLTGoodRunsListgR(void *p);
   static void destruct_vectorlERootcLcLTGoodRunsListgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<Root::TGoodRunsList>*)
   {
      vector<Root::TGoodRunsList> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Root::TGoodRunsList>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Root::TGoodRunsList>", -2, "/Users/wsfreund/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<Root::TGoodRunsList>), DefineBehavior(ptr, ptr),
                  0, &vectorlERootcLcLTGoodRunsListgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<Root::TGoodRunsList>) );
      instance.SetNew(&new_vectorlERootcLcLTGoodRunsListgR);
      instance.SetNewArray(&newArray_vectorlERootcLcLTGoodRunsListgR);
      instance.SetDelete(&delete_vectorlERootcLcLTGoodRunsListgR);
      instance.SetDeleteArray(&deleteArray_vectorlERootcLcLTGoodRunsListgR);
      instance.SetDestructor(&destruct_vectorlERootcLcLTGoodRunsListgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<Root::TGoodRunsList> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Root::TGoodRunsList>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERootcLcLTGoodRunsListgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<Root::TGoodRunsList>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlERootcLcLTGoodRunsListgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Root::TGoodRunsList> : new vector<Root::TGoodRunsList>;
   }
   static void *newArray_vectorlERootcLcLTGoodRunsListgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Root::TGoodRunsList>[nElements] : new vector<Root::TGoodRunsList>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERootcLcLTGoodRunsListgR(void *p) {
      delete ((vector<Root::TGoodRunsList>*)p);
   }
   static void deleteArray_vectorlERootcLcLTGoodRunsListgR(void *p) {
      delete [] ((vector<Root::TGoodRunsList>*)p);
   }
   static void destruct_vectorlERootcLcLTGoodRunsListgR(void *p) {
      typedef vector<Root::TGoodRunsList> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<Root::TGoodRunsList>

namespace ROOT {
   void vectorlERootcLcLTLumiBlockRangegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERootcLcLTLumiBlockRangegR_Dictionary();
   static void *new_vectorlERootcLcLTLumiBlockRangegR(void *p = 0);
   static void *newArray_vectorlERootcLcLTLumiBlockRangegR(Long_t size, void *p);
   static void delete_vectorlERootcLcLTLumiBlockRangegR(void *p);
   static void deleteArray_vectorlERootcLcLTLumiBlockRangegR(void *p);
   static void destruct_vectorlERootcLcLTLumiBlockRangegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<Root::TLumiBlockRange>*)
   {
      vector<Root::TLumiBlockRange> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Root::TLumiBlockRange>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Root::TLumiBlockRange>", -2, "/Users/wsfreund/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<Root::TLumiBlockRange>), DefineBehavior(ptr, ptr),
                  0, &vectorlERootcLcLTLumiBlockRangegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<Root::TLumiBlockRange>) );
      instance.SetNew(&new_vectorlERootcLcLTLumiBlockRangegR);
      instance.SetNewArray(&newArray_vectorlERootcLcLTLumiBlockRangegR);
      instance.SetDelete(&delete_vectorlERootcLcLTLumiBlockRangegR);
      instance.SetDeleteArray(&deleteArray_vectorlERootcLcLTLumiBlockRangegR);
      instance.SetDestructor(&destruct_vectorlERootcLcLTLumiBlockRangegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<Root::TLumiBlockRange> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Root::TLumiBlockRange>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERootcLcLTLumiBlockRangegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<Root::TLumiBlockRange>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlERootcLcLTLumiBlockRangegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Root::TLumiBlockRange> : new vector<Root::TLumiBlockRange>;
   }
   static void *newArray_vectorlERootcLcLTLumiBlockRangegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Root::TLumiBlockRange>[nElements] : new vector<Root::TLumiBlockRange>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERootcLcLTLumiBlockRangegR(void *p) {
      delete ((vector<Root::TLumiBlockRange>*)p);
   }
   static void deleteArray_vectorlERootcLcLTLumiBlockRangegR(void *p) {
      delete [] ((vector<Root::TLumiBlockRange>*)p);
   }
   static void destruct_vectorlERootcLcLTLumiBlockRangegR(void *p) {
      typedef vector<Root::TLumiBlockRange> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<Root::TLumiBlockRange>

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

namespace ROOT {
   void vectorlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEfloatgR_Dictionary();
   static void *new_vectorlEfloatgR(void *p = 0);
   static void *newArray_vectorlEfloatgR(Long_t size, void *p);
   static void delete_vectorlEfloatgR(void *p);
   static void deleteArray_vectorlEfloatgR(void *p);
   static void destruct_vectorlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<float>*)
   {
      vector<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<float>", -2, "vector.dll", 0,
                  typeid(vector<float>), DefineBehavior(ptr, ptr),
                  0, &vectorlEfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<float>) );
      instance.SetNew(&new_vectorlEfloatgR);
      instance.SetNewArray(&newArray_vectorlEfloatgR);
      instance.SetDelete(&delete_vectorlEfloatgR);
      instance.SetDeleteArray(&deleteArray_vectorlEfloatgR);
      instance.SetDestructor(&destruct_vectorlEfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float> : new vector<float>;
   }
   static void *newArray_vectorlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float>[nElements] : new vector<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEfloatgR(void *p) {
      delete ((vector<float>*)p);
   }
   static void deleteArray_vectorlEfloatgR(void *p) {
      delete [] ((vector<float>*)p);
   }
   static void destruct_vectorlEfloatgR(void *p) {
      typedef vector<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<float>

namespace ROOT {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "/Users/wsfreund/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<int>

namespace ROOT {
   void vectorlEstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEstringgR_Dictionary();
   static void *new_vectorlEstringgR(void *p = 0);
   static void *newArray_vectorlEstringgR(Long_t size, void *p);
   static void delete_vectorlEstringgR(void *p);
   static void deleteArray_vectorlEstringgR(void *p);
   static void destruct_vectorlEstringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<string>*)
   {
      vector<string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<string>", -2, "/Users/wsfreund/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<string>), DefineBehavior(ptr, ptr),
                  0, &vectorlEstringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<string>) );
      instance.SetNew(&new_vectorlEstringgR);
      instance.SetNewArray(&newArray_vectorlEstringgR);
      instance.SetDelete(&delete_vectorlEstringgR);
      instance.SetDeleteArray(&deleteArray_vectorlEstringgR);
      instance.SetDestructor(&destruct_vectorlEstringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEstringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<string>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string> : new vector<string>;
   }
   static void *newArray_vectorlEstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string>[nElements] : new vector<string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEstringgR(void *p) {
      delete ((vector<string>*)p);
   }
   static void deleteArray_vectorlEstringgR(void *p) {
      delete [] ((vector<string>*)p);
   }
   static void destruct_vectorlEstringgR(void *p) {
      typedef vector<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<string>

namespace ROOT {
   void vectorlEunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPintgR_Dictionary();
   static void *new_vectorlEunsignedsPintgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPintgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPintgR(void *p);
   static void deleteArray_vectorlEunsignedsPintgR(void *p);
   static void destruct_vectorlEunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned int>*)
   {
      vector<unsigned int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned int>", -2, "vector.dll", 0,
                  typeid(vector<unsigned int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned int>) );
      instance.SetNew(&new_vectorlEunsignedsPintgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPintgR);
      instance.SetDelete(&delete_vectorlEunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPintgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<unsigned int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<unsigned int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int> : new vector<unsigned int>;
   }
   static void *newArray_vectorlEunsignedsPintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int>[nElements] : new vector<unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPintgR(void *p) {
      delete ((vector<unsigned int>*)p);
   }
   static void deleteArray_vectorlEunsignedsPintgR(void *p) {
      delete [] ((vector<unsigned int>*)p);
   }
   static void destruct_vectorlEunsignedsPintgR(void *p) {
      typedef vector<unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<unsigned int>

namespace ROOT {
   void vectorlEvectorlEdoublegRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEdoublegRsPgR_Dictionary();
   static void *new_vectorlEvectorlEdoublegRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEdoublegRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEdoublegRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEdoublegRsPgR(void *p);
   static void destruct_vectorlEvectorlEdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<double> >*)
   {
      vector<vector<double> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<double> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<double> >", -2, "/Users/wsfreund/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<double> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEdoublegRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<double> >) );
      instance.SetNew(&new_vectorlEvectorlEdoublegRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEdoublegRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEdoublegRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEdoublegRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<double> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<double> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEdoublegRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<double> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<double> > : new vector<vector<double> >;
   }
   static void *newArray_vectorlEvectorlEdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<double> >[nElements] : new vector<vector<double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEdoublegRsPgR(void *p) {
      delete ((vector<vector<double> >*)p);
   }
   static void deleteArray_vectorlEvectorlEdoublegRsPgR(void *p) {
      delete [] ((vector<vector<double> >*)p);
   }
   static void destruct_vectorlEvectorlEdoublegRsPgR(void *p) {
      typedef vector<vector<double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<double> >

namespace ROOT {
   void vectorlEvectorlEfloatgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEfloatgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEfloatgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEfloatgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEfloatgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEfloatgRsPgR(void *p);
   static void destruct_vectorlEvectorlEfloatgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<float> >*)
   {
      vector<vector<float> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<float> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<float> >", -2, "/Users/wsfreund/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<float> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEfloatgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<float> >) );
      instance.SetNew(&new_vectorlEvectorlEfloatgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEfloatgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEfloatgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEfloatgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEfloatgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<float> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<float> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEfloatgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<float> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEfloatgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<float> > : new vector<vector<float> >;
   }
   static void *newArray_vectorlEvectorlEfloatgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<float> >[nElements] : new vector<vector<float> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEfloatgRsPgR(void *p) {
      delete ((vector<vector<float> >*)p);
   }
   static void deleteArray_vectorlEvectorlEfloatgRsPgR(void *p) {
      delete [] ((vector<vector<float> >*)p);
   }
   static void destruct_vectorlEvectorlEfloatgRsPgR(void *p) {
      typedef vector<vector<float> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<float> >

namespace ROOT {
   void vectorlEvectorlEintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEintgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEintgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEintgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEintgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEintgRsPgR(void *p);
   static void destruct_vectorlEvectorlEintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<int> >*)
   {
      vector<vector<int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<int> >", -2, "/Users/wsfreund/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<int> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEintgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<int> >) );
      instance.SetNew(&new_vectorlEvectorlEintgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEintgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEintgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEintgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEintgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEintgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<int> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int> > : new vector<vector<int> >;
   }
   static void *newArray_vectorlEvectorlEintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int> >[nElements] : new vector<vector<int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEintgRsPgR(void *p) {
      delete ((vector<vector<int> >*)p);
   }
   static void deleteArray_vectorlEvectorlEintgRsPgR(void *p) {
      delete [] ((vector<vector<int> >*)p);
   }
   static void destruct_vectorlEvectorlEintgRsPgR(void *p) {
      typedef vector<vector<int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<int> >

namespace ROOT {
   void vectorlEvectorlEstringgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEstringgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEstringgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEstringgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEstringgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEstringgRsPgR(void *p);
   static void destruct_vectorlEvectorlEstringgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<string> >*)
   {
      vector<vector<string> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<string> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<string> >", -2, "/Users/wsfreund/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<string> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEstringgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<string> >) );
      instance.SetNew(&new_vectorlEvectorlEstringgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEstringgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEstringgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEstringgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEstringgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<string> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<string> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEstringgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<string> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEstringgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<string> > : new vector<vector<string> >;
   }
   static void *newArray_vectorlEvectorlEstringgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<string> >[nElements] : new vector<vector<string> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEstringgRsPgR(void *p) {
      delete ((vector<vector<string> >*)p);
   }
   static void deleteArray_vectorlEvectorlEstringgRsPgR(void *p) {
      delete [] ((vector<vector<string> >*)p);
   }
   static void destruct_vectorlEvectorlEstringgRsPgR(void *p) {
      typedef vector<vector<string> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<string> >

namespace ROOT {
   void vectorlEvectorlEunsignedsPintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEunsignedsPintgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEunsignedsPintgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEunsignedsPintgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEunsignedsPintgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEunsignedsPintgRsPgR(void *p);
   static void destruct_vectorlEvectorlEunsignedsPintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<unsigned int> >*)
   {
      vector<vector<unsigned int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<unsigned int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<unsigned int> >", -2, "/Users/wsfreund/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<unsigned int> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEunsignedsPintgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<unsigned int> >) );
      instance.SetNew(&new_vectorlEvectorlEunsignedsPintgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEunsignedsPintgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEunsignedsPintgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEunsignedsPintgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEunsignedsPintgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<unsigned int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<unsigned int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEunsignedsPintgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<unsigned int> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEunsignedsPintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<unsigned int> > : new vector<vector<unsigned int> >;
   }
   static void *newArray_vectorlEvectorlEunsignedsPintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<unsigned int> >[nElements] : new vector<vector<unsigned int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEunsignedsPintgRsPgR(void *p) {
      delete ((vector<vector<unsigned int> >*)p);
   }
   static void deleteArray_vectorlEvectorlEunsignedsPintgRsPgR(void *p) {
      delete [] ((vector<vector<unsigned int> >*)p);
   }
   static void destruct_vectorlEvectorlEunsignedsPintgRsPgR(void *p) {
      typedef vector<vector<unsigned int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<unsigned int> >

/********************************************************
* rootdic.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablerootdic();

extern "C" void G__set_cpp_environmentrootdic() {
  G__cpp_reset_tagtablerootdic();
}
#include <new>
extern "C" int G__cpp_dllrevrootdic() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* GRLStrUtil */
static int G__rootdic_168_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GRLStrUtil::trim(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_168_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GRLStrUtil::split(*(string*) libp->para[0].ref, *(string*) libp->para[1].ref
, *(string*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_168_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = GRLStrUtil::split(*((string*) G__int(libp->para[0])));
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}


/* Root */

/* Root::TMsgLogger */
static int G__rootdic_425_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Root::TMsgLogger* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Root::TMsgLogger((TObject*) G__int(libp->para[0]), (Root::TMsgLevel) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) Root::TMsgLogger((TObject*) G__int(libp->para[0]), (Root::TMsgLevel) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Root::TMsgLogger((TObject*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) Root::TMsgLogger((TObject*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_RootcLcLTMsgLogger));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_425_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Root::TMsgLogger* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Root::TMsgLogger(*(string*) libp->para[0].ref, (Root::TMsgLevel) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) Root::TMsgLogger(*(string*) libp->para[0].ref, (Root::TMsgLevel) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Root::TMsgLogger(*(string*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) Root::TMsgLogger(*(string*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_RootcLcLTMsgLogger));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_425_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Root::TMsgLogger* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Root::TMsgLogger((Root::TMsgLevel) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) Root::TMsgLogger((Root::TMsgLevel) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new Root::TMsgLogger[n];
       } else {
         p = new((void*) gvp) Root::TMsgLogger[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new Root::TMsgLogger;
       } else {
         p = new((void*) gvp) Root::TMsgLogger;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_RootcLcLTMsgLogger));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_425_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Root::TMsgLogger* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Root::TMsgLogger(*(Root::TMsgLogger*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) Root::TMsgLogger(*(Root::TMsgLogger*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_RootcLcLTMsgLogger));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_425_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Root::TMsgLogger*) G__getstructoffset())->SetSource((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_425_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Root::TMsgLogger*) G__getstructoffset())->SetSource(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_425_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Root::TMsgLogger*) G__getstructoffset())->SetSource(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_425_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const Root::TMsgLogger*) G__getstructoffset())->GetSource();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_425_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const Root::TMsgLogger*) G__getstructoffset())->GetMaxSourceSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_425_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const Root::TMsgLogger*) G__getstructoffset())->GetPrintedSource();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_425_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const Root::TMsgLogger*) G__getstructoffset())->GetFormattedSource();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_425_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Root::TMsgLogger*) G__getstructoffset())->GetMinLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_425_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const Root::TMsgLogger*) G__getstructoffset())->GetMinLevelStr();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_425_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Root::TMsgLogger*) G__getstructoffset())->MapLevel(*(TString*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_425_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Root::TMsgLogger& obj = ((Root::TMsgLogger*) G__getstructoffset())->operator=(*(Root::TMsgLogger*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_425_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Root::TMsgLogger& obj = Root::TMsgLogger::endmsg(*(Root::TMsgLogger*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_425_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Root::TMsgLogger& obj = ((Root::TMsgLogger*) G__getstructoffset())->operator<<((std::ios& (*)(std::ios&) ) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_425_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Root::TMsgLogger& obj = ((Root::TMsgLogger*) G__getstructoffset())->operator<<((Root::TMsgLevel) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_425_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Root::TMsgLogger::SetMinLevel((Root::TMsgLevel) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_425_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Root::TMsgLogger::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_425_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Root::TMsgLogger::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_425_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Root::TMsgLogger::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_425_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Root::TMsgLogger::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_425_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Root::TMsgLogger*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_425_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Root::TMsgLogger::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_425_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Root::TMsgLogger::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_425_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Root::TMsgLogger::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_425_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Root::TMsgLogger::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Root::TMsgLogger G__TRootcLcLTMsgLogger;
static int G__rootdic_425_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Root::TMsgLogger*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Root::TMsgLogger*) (soff+(sizeof(Root::TMsgLogger)*i)))->~G__TRootcLcLTMsgLogger();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Root::TMsgLogger*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Root::TMsgLogger*) (soff))->~G__TRootcLcLTMsgLogger();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Root::TUniqueGRLString */
static int G__rootdic_435_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Root::TUniqueGRLString& obj = Root::TUniqueGRLString::instance();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_435_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Root::TUniqueGRLString*) G__getstructoffset())->SetTo(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__rootdic_435_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Root::TUniqueGRLString* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Root::TUniqueGRLString(*(Root::TUniqueGRLString*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_RootcLcLTUniqueGRLString));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__rootdic_435_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Root::TUniqueGRLString* dest = (Root::TUniqueGRLString*) G__getstructoffset();
   *dest = *(Root::TUniqueGRLString*) libp->para[0].ref;
   const Root::TUniqueGRLString& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Root::TLumiBlockRange */
static int G__rootdic_436_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Root::TLumiBlockRange* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Root::TLumiBlockRange[n];
     } else {
       p = new((void*) gvp) Root::TLumiBlockRange[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Root::TLumiBlockRange;
     } else {
       p = new((void*) gvp) Root::TLumiBlockRange;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_RootcLcLTLumiBlockRange));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_436_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Root::TLumiBlockRange* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Root::TLumiBlockRange(*(Int_t*) G__Intref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1]));
     } else {
       p = new((void*) gvp) Root::TLumiBlockRange(*(Int_t*) G__Intref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Root::TLumiBlockRange(*(Int_t*) G__Intref(&libp->para[0]));
     } else {
       p = new((void*) gvp) Root::TLumiBlockRange(*(Int_t*) G__Intref(&libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_RootcLcLTLumiBlockRange));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_436_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Root::TLumiBlockRange* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Root::TLumiBlockRange(*(Root::TLumiBlockRange*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) Root::TLumiBlockRange(*(Root::TLumiBlockRange*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_RootcLcLTLumiBlockRange));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_436_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Root::TLumiBlockRange& obj = ((Root::TLumiBlockRange*) G__getstructoffset())->operator=(*(Root::TLumiBlockRange*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_436_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Root::TLumiBlockRange* pobj;
         const Root::TLumiBlockRange xobj = ((const Root::TLumiBlockRange*) G__getstructoffset())->GetOverlapWith(*(Root::TLumiBlockRange*) libp->para[0].ref);
         pobj = new Root::TLumiBlockRange(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_436_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Root::TLumiBlockRange>* pobj;
         const vector<Root::TLumiBlockRange> xobj = ((const Root::TLumiBlockRange*) G__getstructoffset())->GetPartOnlyIn(*(Root::TLumiBlockRange*) libp->para[0].ref);
         pobj = new vector<Root::TLumiBlockRange>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_436_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Root::TLumiBlockRange>* pobj;
         const vector<Root::TLumiBlockRange> xobj = ((const Root::TLumiBlockRange*) G__getstructoffset())->GetPartNotIn(*(Root::TLumiBlockRange*) libp->para[0].ref);
         pobj = new vector<Root::TLumiBlockRange>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_436_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Root::TLumiBlockRange*) G__getstructoffset())->Contains(*(Int_t*) G__Intref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_436_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Root::TLumiBlockRange*) G__getstructoffset())->Begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_436_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Root::TLumiBlockRange*) G__getstructoffset())->End());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_436_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Root::TLumiBlockRange*) G__getstructoffset())->IsEmpty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_436_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Root::TLumiBlockRange*) G__getstructoffset())->SetBegin(*(Int_t*) G__Intref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_436_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Root::TLumiBlockRange*) G__getstructoffset())->SetEnd(*(Int_t*) G__Intref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_436_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Root::TLumiBlockRange*) G__getstructoffset())->Summary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_436_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Root::TLumiBlockRange::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_436_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Root::TLumiBlockRange::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_436_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Root::TLumiBlockRange::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_436_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Root::TLumiBlockRange::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_436_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Root::TLumiBlockRange*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_436_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Root::TLumiBlockRange::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_436_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Root::TLumiBlockRange::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_436_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Root::TLumiBlockRange::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_436_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Root::TLumiBlockRange::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Root::TLumiBlockRange G__TRootcLcLTLumiBlockRange;
static int G__rootdic_436_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Root::TLumiBlockRange*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Root::TLumiBlockRange*) (soff+(sizeof(Root::TLumiBlockRange)*i)))->~G__TRootcLcLTLumiBlockRange();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Root::TLumiBlockRange*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Root::TLumiBlockRange*) (soff))->~G__TRootcLcLTLumiBlockRange();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Root::TGoodRun */
static int G__rootdic_441_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Root::TGoodRun* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Root::TGoodRun[n];
     } else {
       p = new((void*) gvp) Root::TGoodRun[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Root::TGoodRun;
     } else {
       p = new((void*) gvp) Root::TGoodRun;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRun));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_441_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Root::TGoodRun* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Root::TGoodRun(*(Int_t*) G__Intref(&libp->para[0]));
   } else {
     p = new((void*) gvp) Root::TGoodRun(*(Int_t*) G__Intref(&libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRun));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_441_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Root::TGoodRun* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Root::TGoodRun(*(Root::TGoodRun*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) Root::TGoodRun(*(Root::TGoodRun*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRun));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_441_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Root::TGoodRun& obj = ((Root::TGoodRun*) G__getstructoffset())->operator=(*(Root::TGoodRun*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_441_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Root::TGoodRun* pobj;
         const Root::TGoodRun xobj = ((const Root::TGoodRun*) G__getstructoffset())->GetOverlapWith(*(Root::TGoodRun*) libp->para[0].ref);
         pobj = new Root::TGoodRun(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_441_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Root::TGoodRun* pobj;
         const Root::TGoodRun xobj = ((const Root::TGoodRun*) G__getstructoffset())->GetSumWith(*(Root::TGoodRun*) libp->para[0].ref);
         pobj = new Root::TGoodRun(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_441_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Root::TGoodRun* pobj;
         const Root::TGoodRun xobj = ((const Root::TGoodRun*) G__getstructoffset())->GetPartOnlyIn(*(Root::TGoodRun*) libp->para[0].ref);
         pobj = new Root::TGoodRun(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_441_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Root::TGoodRun* pobj;
         const Root::TGoodRun xobj = ((const Root::TGoodRun*) G__getstructoffset())->GetPartNotIn(*(Root::TGoodRun*) libp->para[0].ref);
         pobj = new Root::TGoodRun(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_441_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Root::TGoodRun*) G__getstructoffset())->IsEmpty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_441_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Root::TGoodRun*) G__getstructoffset())->HasLB(*(Int_t*) G__Intref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_441_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Root::TLumiBlockRange,allocator<Root::TLumiBlockRange> >::iterator* pobj;
         vector<Root::TLumiBlockRange,allocator<Root::TLumiBlockRange> >::iterator xobj = ((Root::TGoodRun*) G__getstructoffset())->Find(*(Int_t*) G__Intref(&libp->para[0]));
         pobj = new vector<Root::TLumiBlockRange,allocator<Root::TLumiBlockRange> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_441_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Root::TLumiBlockRange,allocator<Root::TLumiBlockRange> >::const_iterator* pobj;
         const vector<Root::TLumiBlockRange,allocator<Root::TLumiBlockRange> >::const_iterator xobj = ((const Root::TGoodRun*) G__getstructoffset())->Find(*(Int_t*) G__Intref(&libp->para[0]));
         pobj = new vector<Root::TLumiBlockRange,allocator<Root::TLumiBlockRange> >::const_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_441_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Root::TGoodRun*) G__getstructoffset())->GetRunNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_441_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Root::TGoodRun*) G__getstructoffset())->SetRunNumber(*(Int_t*) G__Intref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_441_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Root::TGoodRun*) G__getstructoffset())->Summary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_441_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Root::TGoodRun*) G__getstructoffset())->Sort();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_441_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Root::TGoodRun*) G__getstructoffset())->Compress();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_441_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Root::TGoodRun*) G__getstructoffset())->AddLB(*(Int_t*) G__Intref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_441_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Root::TGoodRun::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_441_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Root::TGoodRun::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_441_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Root::TGoodRun::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_441_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Root::TGoodRun::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_441_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Root::TGoodRun*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_441_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Root::TGoodRun::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_441_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Root::TGoodRun::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_441_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Root::TGoodRun::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_441_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Root::TGoodRun::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Root::TGoodRun G__TRootcLcLTGoodRun;
static int G__rootdic_441_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Root::TGoodRun*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Root::TGoodRun*) (soff+(sizeof(Root::TGoodRun)*i)))->~G__TRootcLcLTGoodRun();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Root::TGoodRun*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Root::TGoodRun*) (soff))->~G__TRootcLcLTGoodRun();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Root::TGoodRun::SorterL2H */
static int G__rootdic_442_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Root::TGoodRun::SorterL2H* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Root::TGoodRun::SorterL2H[n];
     } else {
       p = new((void*) gvp) Root::TGoodRun::SorterL2H[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Root::TGoodRun::SorterL2H;
     } else {
       p = new((void*) gvp) Root::TGoodRun::SorterL2H;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRuncLcLSorterL2H));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_442_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Root::TGoodRun::SorterL2H*) G__getstructoffset())->operator()(*(Root::TLumiBlockRange*) libp->para[0].ref, *(Root::TLumiBlockRange*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__rootdic_442_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Root::TGoodRun::SorterL2H* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Root::TGoodRun::SorterL2H(*(Root::TGoodRun::SorterL2H*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRuncLcLSorterL2H));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Root::TGoodRun::SorterL2H G__TRootcLcLTGoodRuncLcLSorterL2H;
static int G__rootdic_442_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Root::TGoodRun::SorterL2H*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Root::TGoodRun::SorterL2H*) (soff+(sizeof(Root::TGoodRun::SorterL2H)*i)))->~G__TRootcLcLTGoodRuncLcLSorterL2H();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Root::TGoodRun::SorterL2H*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Root::TGoodRun::SorterL2H*) (soff))->~G__TRootcLcLTGoodRuncLcLSorterL2H();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__rootdic_442_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Root::TGoodRun::SorterL2H* dest = (Root::TGoodRun::SorterL2H*) G__getstructoffset();
   const Root::TGoodRun::SorterL2H& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Root::TGoodRunsList */
static int G__rootdic_443_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Root::TGoodRunsList* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Root::TGoodRunsList[n];
     } else {
       p = new((void*) gvp) Root::TGoodRunsList[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Root::TGoodRunsList;
     } else {
       p = new((void*) gvp) Root::TGoodRunsList;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRunsList));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Root::TGoodRunsList* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Root::TGoodRunsList((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Root::TGoodRunsList((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRunsList));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Root::TGoodRunsList* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Root::TGoodRunsList(*(Root::TGoodRunsList*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) Root::TGoodRunsList(*(Root::TGoodRunsList*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRunsList));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Root::TGoodRunsList& obj = ((Root::TGoodRunsList*) G__getstructoffset())->operator=(*(Root::TGoodRunsList*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Root::TGoodRunsList*) G__getstructoffset())->AddGRL(*(Root::TGoodRunsList*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Root::TGoodRunsList* pobj;
         const Root::TGoodRunsList xobj = ((const Root::TGoodRunsList*) G__getstructoffset())->GetOverlapWith(*(Root::TGoodRunsList*) libp->para[0].ref);
         pobj = new Root::TGoodRunsList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Root::TGoodRunsList* pobj;
         const Root::TGoodRunsList xobj = ((const Root::TGoodRunsList*) G__getstructoffset())->GetSumWith(*(Root::TGoodRunsList*) libp->para[0].ref);
         pobj = new Root::TGoodRunsList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Root::TGoodRunsList* pobj;
         const Root::TGoodRunsList xobj = ((const Root::TGoodRunsList*) G__getstructoffset())->GetPartOnlyIn(*(Root::TGoodRunsList*) libp->para[0].ref);
         pobj = new Root::TGoodRunsList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Root::TGoodRunsList* pobj;
         const Root::TGoodRunsList xobj = ((const Root::TGoodRunsList*) G__getstructoffset())->GetPartNotIn(*(Root::TGoodRunsList*) libp->para[0].ref);
         pobj = new Root::TGoodRunsList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Root::TGoodRunsList*) G__getstructoffset())->HasTriggerInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Root::TGoodRunsList*) G__getstructoffset())->HasRun(*(Int_t*) G__Intref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Root::TGoodRunsList*) G__getstructoffset())->HasRunLumiBlock(*(Int_t*) G__Intref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Root::TGoodRunsList*) G__getstructoffset())->HasSameGRLInfo(*(Root::TGoodRunsList*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const Root::TGoodRunsList*) G__getstructoffset())->HasOverlapWith(*(Root::TGoodRunsList*) libp->para[0].ref, (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const Root::TGoodRunsList*) G__getstructoffset())->HasOverlapWith(*(Root::TGoodRunsList*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Root::TGoodRunsList*) G__getstructoffset())->AddRunLumiBlock(*(Int_t*) G__Intref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Root::TGoodRunsList*) G__getstructoffset())->SetVersion(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Root::TGoodRunsList*) G__getstructoffset())->AddMetaData(*(TString*) libp->para[0].ref, *(TString*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Root::TGoodRunsList*) G__getstructoffset())->SetMetaData(*(map<TString,TString>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Root::TGoodRunsList*) G__getstructoffset())->SetCheckGRLInfo((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Root::TGoodRunsList*) G__getstructoffset())->SetCheckGRLInfo();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Bool_t& obj = ((const Root::TGoodRunsList*) G__getstructoffset())->GetCheckGRLInfo();
         result7->ref = (long) (&obj);
         G__letint(result7, 'g', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const Root::TGoodRunsList*) G__getstructoffset())->GetVersion();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<TString,TString>& obj = ((const Root::TGoodRunsList*) G__getstructoffset())->GetMetaData();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const Root::TGoodRunsList*) G__getstructoffset())->GetMetaDataSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const Root::TGoodRunsList*) G__getstructoffset())->Summary((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const Root::TGoodRunsList*) G__getstructoffset())->Summary();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Root::TGoodRunsList*) G__getstructoffset())->IsEmpty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int>* pobj;
         const vector<int> xobj = ((const Root::TGoodRunsList*) G__getstructoffset())->GetRunlist();
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Root::TGoodRun>* pobj;
         const vector<Root::TGoodRun> xobj = ((const Root::TGoodRunsList*) G__getstructoffset())->GetGoodRuns();
         pobj = new vector<Root::TGoodRun>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<std::string>* pobj;
         const vector<std::string> xobj = ((const Root::TGoodRunsList*) G__getstructoffset())->GetTriggerList();
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<std::string>* pobj;
         const vector<std::string> xobj = ((const Root::TGoodRunsList*) G__getstructoffset())->GetStreamList();
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const Root::TGoodRunsList*) G__getstructoffset())->GetSuggestedName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Root::TGoodRunsList*) G__getstructoffset())->Compress();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Root::TGoodRunsList::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Root::TGoodRunsList::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Root::TGoodRunsList::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Root::TGoodRunsList::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Root::TGoodRunsList*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Root::TGoodRunsList::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Root::TGoodRunsList::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Root::TGoodRunsList::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_443_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Root::TGoodRunsList::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Root::TGoodRunsList G__TRootcLcLTGoodRunsList;
static int G__rootdic_443_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Root::TGoodRunsList*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Root::TGoodRunsList*) (soff+(sizeof(Root::TGoodRunsList)*i)))->~G__TRootcLcLTGoodRunsList();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Root::TGoodRunsList*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Root::TGoodRunsList*) (soff))->~G__TRootcLcLTGoodRunsList();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Root::TGRLCollection */
static int G__rootdic_469_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Root::TGRLCollection* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Root::TGRLCollection((Bool_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) Root::TGRLCollection((Bool_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new Root::TGRLCollection[n];
       } else {
         p = new((void*) gvp) Root::TGRLCollection[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new Root::TGRLCollection;
       } else {
         p = new((void*) gvp) Root::TGRLCollection;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGRLCollection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_469_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Root::TGRLCollection* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Root::TGRLCollection(*(Root::TGRLCollection*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) Root::TGRLCollection(*(Root::TGRLCollection*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGRLCollection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_469_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Root::TGRLCollection& obj = ((Root::TGRLCollection*) G__getstructoffset())->operator=(*(Root::TGRLCollection*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_469_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Root::TGRLCollection*) G__getstructoffset())->SetVersion(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_469_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Root::TGRLCollection*) G__getstructoffset())->SetMetaData(*(map<TString,TString>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_469_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Root::TGRLCollection*) G__getstructoffset())->SetCheckGRLInfo((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Root::TGRLCollection*) G__getstructoffset())->SetCheckGRLInfo();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_469_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Root::TGRLCollection*) G__getstructoffset())->HasRun(*(Int_t*) G__Intref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_469_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Root::TGRLCollection*) G__getstructoffset())->HasRunLumiBlock(*(Int_t*) G__Intref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_469_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Root::TGRLCollection*) G__getstructoffset())->IsEmpty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_469_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const Root::TGRLCollection*) G__getstructoffset())->HasGoodRunsList(*(TString*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_469_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const Root::TGoodRunsList* pobj;
         const Root::TGoodRunsList xobj = ((const Root::TGRLCollection*) G__getstructoffset())->GetMergedGoodRunsList(*(Root::BoolOperation*) libp->para[0].ref);
         pobj = new Root::TGoodRunsList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         const Root::TGoodRunsList* pobj;
         const Root::TGoodRunsList xobj = ((const Root::TGRLCollection*) G__getstructoffset())->GetMergedGoodRunsList();
         pobj = new Root::TGoodRunsList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_469_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Root::TGoodRunsList* pobj;
         const Root::TGoodRunsList xobj = ((const Root::TGRLCollection*) G__getstructoffset())->GetGoodRunsList((unsigned int) G__int(libp->para[0]));
         pobj = new Root::TGoodRunsList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_469_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Root::TGoodRunsList,allocator<Root::TGoodRunsList> >::iterator* pobj;
         vector<Root::TGoodRunsList,allocator<Root::TGoodRunsList> >::iterator xobj = ((Root::TGRLCollection*) G__getstructoffset())->find(*(TString*) libp->para[0].ref);
         pobj = new vector<Root::TGoodRunsList,allocator<Root::TGoodRunsList> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_469_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Root::TGoodRunsList,allocator<Root::TGoodRunsList> >::const_iterator* pobj;
         const vector<Root::TGoodRunsList,allocator<Root::TGoodRunsList> >::const_iterator xobj = ((const Root::TGRLCollection*) G__getstructoffset())->find(*(TString*) libp->para[0].ref);
         pobj = new vector<Root::TGoodRunsList,allocator<Root::TGoodRunsList> >::const_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_469_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const Root::TGRLCollection* pobj;
         const Root::TGRLCollection xobj = ((const Root::TGRLCollection*) G__getstructoffset())->GetMergedGRLCollection(*(Root::BoolOperation*) libp->para[0].ref);
         pobj = new Root::TGRLCollection(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         const Root::TGRLCollection* pobj;
         const Root::TGRLCollection xobj = ((const Root::TGRLCollection*) G__getstructoffset())->GetMergedGRLCollection();
         pobj = new Root::TGRLCollection(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_469_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Root::TGRLCollection* pobj;
         const Root::TGRLCollection xobj = ((const Root::TGRLCollection*) G__getstructoffset())->GetOverlapWith(*(Root::TGoodRunsList*) libp->para[0].ref);
         pobj = new Root::TGRLCollection(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_469_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Root::TGRLCollection*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_469_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const Root::TGRLCollection*) G__getstructoffset())->Summary((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const Root::TGRLCollection*) G__getstructoffset())->Summary();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_469_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Root::TGRLCollection::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_469_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Root::TGRLCollection::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_469_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Root::TGRLCollection::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_469_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Root::TGRLCollection::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_469_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Root::TGRLCollection*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_469_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Root::TGRLCollection::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_469_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Root::TGRLCollection::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_469_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Root::TGRLCollection::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_469_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Root::TGRLCollection::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Root::TGRLCollection G__TRootcLcLTGRLCollection;
static int G__rootdic_469_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Root::TGRLCollection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Root::TGRLCollection*) (soff+(sizeof(Root::TGRLCollection)*i)))->~G__TRootcLcLTGRLCollection();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Root::TGRLCollection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Root::TGRLCollection*) (soff))->~G__TRootcLcLTGRLCollection();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Root::TGoodRunsListReader */
static int G__rootdic_508_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Root::TGoodRunsListReader* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Root::TGoodRunsListReader((Bool_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) Root::TGoodRunsListReader((Bool_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new Root::TGoodRunsListReader[n];
       } else {
         p = new((void*) gvp) Root::TGoodRunsListReader[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new Root::TGoodRunsListReader;
       } else {
         p = new((void*) gvp) Root::TGoodRunsListReader;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRunsListReader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_508_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Root::TGoodRunsListReader* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Root::TGoodRunsListReader(*(TString*) libp->para[0].ref, (Bool_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) Root::TGoodRunsListReader(*(TString*) libp->para[0].ref, (Bool_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Root::TGoodRunsListReader(*(TString*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) Root::TGoodRunsListReader(*(TString*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRunsListReader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_508_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Root::TGoodRunsListReader*) G__getstructoffset())->Interpret());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_508_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const Root::TGoodRunsListReader*) G__getstructoffset())->GetXMLString();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_508_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const Root::TGoodRunsListReader*) G__getstructoffset())->GetXMLFilename();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_508_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Root::TGoodRunsListReader*) G__getstructoffset())->AddXMLFile(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_508_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Root::TGoodRunsListReader*) G__getstructoffset())->AddXMLString(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_508_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Root::TGoodRunsListReader*) G__getstructoffset())->SetXMLString(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_508_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Root::TGoodRunsListReader*) G__getstructoffset())->SetXMLFile(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_508_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Root::TGoodRunsListReader*) G__getstructoffset())->SetCheckGRLInfo((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Root::TGoodRunsListReader*) G__getstructoffset())->SetCheckGRLInfo();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_508_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const Root::TGoodRunsList* pobj;
         const Root::TGoodRunsList xobj = ((const Root::TGoodRunsListReader*) G__getstructoffset())->GetMergedGoodRunsList(*(Root::BoolOperation*) libp->para[0].ref);
         pobj = new Root::TGoodRunsList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         const Root::TGoodRunsList* pobj;
         const Root::TGoodRunsList xobj = ((const Root::TGoodRunsListReader*) G__getstructoffset())->GetMergedGoodRunsList();
         pobj = new Root::TGoodRunsList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_508_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Root::TGoodRunsList* pobj;
         const Root::TGoodRunsList xobj = ((const Root::TGoodRunsListReader*) G__getstructoffset())->GetGoodRunsList((unsigned int) G__int(libp->para[0]));
         pobj = new Root::TGoodRunsList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_508_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Root::TGRLCollection* pobj;
         const Root::TGRLCollection xobj = ((const Root::TGoodRunsListReader*) G__getstructoffset())->GetGRLCollection();
         pobj = new Root::TGRLCollection(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_508_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const Root::TGRLCollection* pobj;
         const Root::TGRLCollection xobj = ((const Root::TGoodRunsListReader*) G__getstructoffset())->GetMergedGRLCollection(*(Root::BoolOperation*) libp->para[0].ref);
         pobj = new Root::TGRLCollection(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         const Root::TGRLCollection* pobj;
         const Root::TGRLCollection xobj = ((const Root::TGoodRunsListReader*) G__getstructoffset())->GetMergedGRLCollection();
         pobj = new Root::TGRLCollection(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_508_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Root::TGoodRunsListReader*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_508_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Root::TGoodRunsListReader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_508_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Root::TGoodRunsListReader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_508_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Root::TGoodRunsListReader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_508_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Root::TGoodRunsListReader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_508_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Root::TGoodRunsListReader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_508_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Root::TGoodRunsListReader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_508_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Root::TGoodRunsListReader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_508_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Root::TGoodRunsListReader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_508_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Root::TGoodRunsListReader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Root::TGoodRunsListReader G__TRootcLcLTGoodRunsListReader;
static int G__rootdic_508_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Root::TGoodRunsListReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Root::TGoodRunsListReader*) (soff+(sizeof(Root::TGoodRunsListReader)*i)))->~G__TRootcLcLTGoodRunsListReader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Root::TGoodRunsListReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Root::TGoodRunsListReader*) (soff))->~G__TRootcLcLTGoodRunsListReader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > > */
static int G__rootdic_514_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::reference obj = ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->at((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_514_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::const_reference obj = ((const vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->at((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_514_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator* pobj;
         vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator xobj = ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_514_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator* pobj;
         vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator xobj = ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_514_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::reverse_iterator* pobj;
         vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::reverse_iterator xobj = ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_514_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::reverse_iterator* pobj;
         vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::reverse_iterator xobj = ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_514_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_514_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_514_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->resize((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_514_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->resize((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type) G__int(libp->para[0]), *((vector<unsigned int,allocator<unsigned int> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_514_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_514_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_514_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::reference obj = ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->operator[]((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_514_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::const_reference obj = ((const vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->operator[]((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_514_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >;
     } else {
       p = new((void*) gvp) vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_514_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type) G__int(libp->para[0]), *(vector<unsigned int,allocator<unsigned int> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type) G__int(libp->para[0]), *(vector<unsigned int,allocator<unsigned int> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_514_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >(*(vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >(*(vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_514_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >(*((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >(*((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_514_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >& obj = ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->operator=(*(vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_514_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->reserve((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_514_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned int,allocator<unsigned int> >& obj = ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_514_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned int,allocator<unsigned int> >& obj = ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_514_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->push_back(*(vector<unsigned int,allocator<unsigned int> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_514_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->swap(*(vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_514_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator* pobj;
         vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator xobj = ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->insert(*((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator*) G__int(libp->para[0])), *(vector<unsigned int,allocator<unsigned int> >*) libp->para[1].ref);
         pobj = new vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_514_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->insert(*((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_514_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->insert(*((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator*) G__int(libp->para[0])), (vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type) G__int(libp->para[1])
, *(vector<unsigned int,allocator<unsigned int> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_514_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_514_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->erase(*((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_514_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->erase(*((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_514_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > > G__TvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR;
static int G__rootdic_514_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) (soff+(sizeof(vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >)*i)))->~G__TvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*) (soff))->~G__TvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > > */
static int G__rootdic_518_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reference obj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->at((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_518_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_reference obj = ((const vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->at((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_518_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator* pobj;
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator xobj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_518_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator* pobj;
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator xobj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_518_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reverse_iterator* pobj;
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reverse_iterator xobj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_518_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reverse_iterator* pobj;
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reverse_iterator xobj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_518_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_518_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_518_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->resize((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_518_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->resize((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]), *((vector<int,allocator<int> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_518_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_518_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_518_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reference obj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->operator[]((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_518_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_reference obj = ((const vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->operator[]((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_518_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >;
     } else {
       p = new((void*) gvp) vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_518_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]), *(vector<int,allocator<int> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]), *(vector<int,allocator<int> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_518_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >(*(vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >(*(vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_518_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >(*((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >(*((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_518_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >& obj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->operator=(*(vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_518_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->reserve((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_518_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int,allocator<int> >& obj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_518_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int,allocator<int> >& obj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_518_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->push_back(*(vector<int,allocator<int> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_518_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->swap(*(vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_518_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator* pobj;
         vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator xobj = ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->insert(*((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator*) G__int(libp->para[0])), *(vector<int,allocator<int> >*) libp->para[1].ref);
         pobj = new vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_518_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->insert(*((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_518_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->insert(*((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator*) G__int(libp->para[0])), (vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type) G__int(libp->para[1])
, *(vector<int,allocator<int> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_518_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_518_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->erase(*((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_518_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->erase(*((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_518_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > > G__TvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR;
static int G__rootdic_518_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) (soff+(sizeof(vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >)*i)))->~G__TvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*) (soff))->~G__TvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > */
static int G__rootdic_522_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reference obj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->at((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_522_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_reference obj = ((const vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->at((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_522_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator* pobj;
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator xobj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_522_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator* pobj;
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator xobj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_522_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reverse_iterator* pobj;
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reverse_iterator xobj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_522_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reverse_iterator* pobj;
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reverse_iterator xobj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_522_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_522_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_522_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->resize((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_522_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->resize((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]), *((vector<double,allocator<double> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_522_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_522_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_522_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reference obj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->operator[]((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_522_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_reference obj = ((const vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->operator[]((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_522_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >;
     } else {
       p = new((void*) gvp) vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_522_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]), *(vector<double,allocator<double> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]), *(vector<double,allocator<double> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_522_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >(*(vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >(*(vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_522_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >(*((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >(*((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_522_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >& obj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->operator=(*(vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_522_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->reserve((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_522_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double,allocator<double> >& obj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_522_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double,allocator<double> >& obj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_522_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->push_back(*(vector<double,allocator<double> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_522_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->swap(*(vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_522_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator* pobj;
         vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator xobj = ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->insert(*((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator*) G__int(libp->para[0])), *(vector<double,allocator<double> >*) libp->para[1].ref);
         pobj = new vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_522_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->insert(*((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_522_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->insert(*((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator*) G__int(libp->para[0])), (vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type) G__int(libp->para[1])
, *(vector<double,allocator<double> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_522_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_522_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->erase(*((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_522_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->erase(*((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_522_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > G__TvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR;
static int G__rootdic_522_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) (soff+(sizeof(vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >)*i)))->~G__TvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*) (soff))->~G__TvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > */
static int G__rootdic_526_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reference obj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->at((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_526_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_reference obj = ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->at((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_526_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator* pobj;
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator xobj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_526_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator* pobj;
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator xobj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_526_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator* pobj;
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator xobj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_526_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator* pobj;
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator xobj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_526_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_526_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_526_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->resize((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_526_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->resize((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]), *((vector<float,allocator<float> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_526_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_526_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_526_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reference obj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->operator[]((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_526_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_reference obj = ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->operator[]((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_526_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >;
     } else {
       p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_526_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]), *(vector<float,allocator<float> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]), *(vector<float,allocator<float> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_526_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >(*(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >(*(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_526_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_526_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >& obj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->operator=(*(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_526_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->reserve((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_526_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float,allocator<float> >& obj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_526_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float,allocator<float> >& obj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_526_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->push_back(*(vector<float,allocator<float> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_526_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->swap(*(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_526_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator* pobj;
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator xobj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->insert(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[0])), *(vector<float,allocator<float> >*) libp->para[1].ref);
         pobj = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_526_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->insert(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_526_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->insert(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[0])), (vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[1])
, *(vector<float,allocator<float> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_526_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_526_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->erase(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_526_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->erase(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_526_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > G__TvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR;
static int G__rootdic_526_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) (soff+(sizeof(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >)*i)))->~G__TvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) (soff))->~G__TvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > > */
static int G__rootdic_530_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::reference obj = ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->at((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_530_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::const_reference obj = ((const vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->at((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_530_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator* pobj;
         vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator xobj = ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_530_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator* pobj;
         vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator xobj = ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_530_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::reverse_iterator* pobj;
         vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::reverse_iterator xobj = ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_530_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::reverse_iterator* pobj;
         vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::reverse_iterator xobj = ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_530_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_530_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_530_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->resize((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_530_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->resize((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type) G__int(libp->para[0]), *((vector<string,allocator<string> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_530_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_530_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_530_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::reference obj = ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->operator[]((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_530_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::const_reference obj = ((const vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->operator[]((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_530_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >;
     } else {
       p = new((void*) gvp) vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_530_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type) G__int(libp->para[0]), *(vector<string,allocator<string> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type) G__int(libp->para[0]), *(vector<string,allocator<string> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_530_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >(*(vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >(*(vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_530_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >(*((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >(*((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_530_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >& obj = ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->operator=(*(vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_530_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->reserve((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_530_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<string,allocator<string> >& obj = ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_530_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<string,allocator<string> >& obj = ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_530_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->push_back(*(vector<string,allocator<string> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_530_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->swap(*(vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_530_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator* pobj;
         vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator xobj = ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->insert(*((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator*) G__int(libp->para[0])), *(vector<string,allocator<string> >*) libp->para[1].ref);
         pobj = new vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_530_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->insert(*((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_530_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->insert(*((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator*) G__int(libp->para[0])), (vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type) G__int(libp->para[1])
, *(vector<string,allocator<string> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_530_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_530_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->erase(*((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_530_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->erase(*((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_530_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > > G__TvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR;
static int G__rootdic_530_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) (soff+(sizeof(vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >)*i)))->~G__TvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) (soff))->~G__TvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* map<string,bool,less<string>,allocator<pair<const string,bool> > > */
static int G__rootdic_535_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,bool,less<string>,allocator<pair<const string,bool> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<string,bool,less<string>,allocator<pair<const string,bool> > >[n];
     } else {
       p = new((void*) gvp) map<string,bool,less<string>,allocator<pair<const string,bool> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<string,bool,less<string>,allocator<pair<const string,bool> > >;
     } else {
       p = new((void*) gvp) map<string,bool,less<string>,allocator<pair<const string,bool> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_535_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,bool,less<string>,allocator<pair<const string,bool> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,bool,less<string>,allocator<pair<const string,bool> > >(*((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__int(libp->para[0])), *((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<string,bool,less<string>,allocator<pair<const string,bool> > >(*((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__int(libp->para[0])), *((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_535_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,bool,less<string>,allocator<pair<const string,bool> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,bool,less<string>,allocator<pair<const string,bool> > >(*((map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<string,bool,less<string>,allocator<pair<const string,bool> > >(*((map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_535_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,bool,less<string>,allocator<pair<const string,bool> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,bool,less<string>,allocator<pair<const string,bool> > >(*(map<string,bool,less<string>,allocator<pair<const string,bool> > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) map<string,bool,less<string>,allocator<pair<const string,bool> > >(*(map<string,bool,less<string>,allocator<pair<const string,bool> > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_535_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<string,bool,less<string>,allocator<pair<const string,bool> > >& obj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->operator=(*(map<string,bool,less<string>,allocator<pair<const string,bool> > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_535_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator* pobj;
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator xobj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->begin();
         pobj = new map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_535_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator* pobj;
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator xobj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->end();
         pobj = new map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_535_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator* pobj;
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator xobj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->rbegin();
         pobj = new map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_535_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator* pobj;
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator xobj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->rend();
         pobj = new map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_535_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_535_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_535_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_535_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const bool& obj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->operator[](*(string*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         G__letint(result7, 'g', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_535_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator,bool>* pobj;
         pair<map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator,bool> xobj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->insert(*(map<string,bool,less<string>,allocator<pair<const string,bool> > >::value_type*) libp->para[0].ref);
         pobj = new pair<map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator,bool>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_535_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator* pobj;
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator xobj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->insert(*((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__int(libp->para[0])), *(map<string,bool,less<string>,allocator<pair<const string,bool> > >::value_type*) libp->para[1].ref);
         pobj = new map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_535_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->insert(*((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__int(libp->para[0])), *((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_535_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->insert(*((map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_535_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->erase(*((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_535_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->erase(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_535_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->erase(*((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__int(libp->para[0])), *((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_535_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->swap(*(map<string,bool,less<string>,allocator<pair<const string,bool> > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_535_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_535_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator* pobj;
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator xobj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->find(*(string*) libp->para[0].ref);
         pobj = new map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_535_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->count(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_535_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator* pobj;
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator xobj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->lower_bound(*(string*) libp->para[0].ref);
         pobj = new map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootdic_535_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator* pobj;
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator xobj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->upper_bound(*(string*) libp->para[0].ref);
         pobj = new map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef map<string,bool,less<string>,allocator<pair<const string,bool> > > G__TmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR;
static int G__rootdic_535_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (map<string,bool,less<string>,allocator<pair<const string,bool> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) (soff+(sizeof(map<string,bool,less<string>,allocator<pair<const string,bool> > >)*i)))->~G__TmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (map<string,bool,less<string>,allocator<pair<const string,bool> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) (soff))->~G__TmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* GRLStrUtil */

/* Root */

/* Root::TMsgLogger */

/* Root::TUniqueGRLString */

/* Root::TLumiBlockRange */

/* Root::TGoodRun */

/* Root::TGoodRun::SorterL2H */

/* Root::TGoodRunsList */

/* Root::TGRLCollection */

/* Root::TGoodRunsListReader */

/* vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > > */

/* vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > > */

/* vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > */

/* vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > */

/* vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > > */

/* map<string,bool,less<string>,allocator<pair<const string,bool> > > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncrootdic {
 public:
  G__Sizep2memfuncrootdic(): p(&G__Sizep2memfuncrootdic::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncrootdic::*p)();
};

size_t G__get_sizep2memfuncrootdic()
{
  G__Sizep2memfuncrootdic a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */
static long G__2vbo_RootcLcLTMsgLogger_basic_ioslEcharcOchar_traitslEchargRsPgR_2(long pobject) {
  Root::TMsgLogger *G__Lderived=(Root::TMsgLogger*)pobject;
  basic_ios<char,char_traits<char> > *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_RootcLcLTMsgLogger_ios_base_3(long pobject) {
  Root::TMsgLogger *G__Lderived=(Root::TMsgLogger*)pobject;
  ios_base *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}


/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancerootdic() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTMsgLogger))) {
     Root::TMsgLogger *G__Lderived;
     G__Lderived=(Root::TMsgLogger*)0x1000;
     {
       basic_ostringstream<char,char_traits<char>,allocator<char> > *G__Lpbase=(basic_ostringstream<char,char_traits<char>,allocator<char> >*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTMsgLogger),G__get_linked_tagnum(&G__rootdicLN_basic_ostringstreamlEcharcOchar_traitslEchargRcOallocatorlEchargRsPgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       basic_ostream<char,char_traits<char> > *G__Lpbase=(basic_ostream<char,char_traits<char> >*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTMsgLogger),G__get_linked_tagnum(&G__rootdicLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTMsgLogger),G__get_linked_tagnum(&G__rootdicLN_basic_ioslEcharcOchar_traitslEchargRsPgR),(long)G__2vbo_RootcLcLTMsgLogger_basic_ioslEcharcOchar_traitslEchargRsPgR_2,1,2);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTMsgLogger),G__get_linked_tagnum(&G__rootdicLN_ios_base),(long)G__2vbo_RootcLcLTMsgLogger_ios_base_3,1,6);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTMsgLogger),G__get_linked_tagnum(&G__rootdicLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTUniqueGRLString))) {
     Root::TUniqueGRLString *G__Lderived;
     G__Lderived=(Root::TUniqueGRLString*)0x1000;
     {
       TString *G__Lpbase=(TString*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTUniqueGRLString),G__get_linked_tagnum(&G__rootdicLN_TString),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTLumiBlockRange))) {
     Root::TLumiBlockRange *G__Lderived;
     G__Lderived=(Root::TLumiBlockRange*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTLumiBlockRange),G__get_linked_tagnum(&G__rootdicLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRun))) {
     Root::TGoodRun *G__Lderived;
     G__Lderived=(Root::TGoodRun*)0x1000;
     {
       vector<Root::TLumiBlockRange,allocator<Root::TLumiBlockRange> > *G__Lpbase=(vector<Root::TLumiBlockRange,allocator<Root::TLumiBlockRange> >*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRun),G__get_linked_tagnum(&G__rootdicLN_vectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRun),G__get_linked_tagnum(&G__rootdicLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRunsList))) {
     Root::TGoodRunsList *G__Lderived;
     G__Lderived=(Root::TGoodRunsList*)0x1000;
     {
       map<int,Root::TGoodRun,less<int>,allocator<pair<const int,Root::TGoodRun> > > *G__Lpbase=(map<int,Root::TGoodRun,less<int>,allocator<pair<const int,Root::TGoodRun> > >*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRunsList),G__get_linked_tagnum(&G__rootdicLN_maplEintcORootcLcLTGoodRuncOlesslEintgRcOallocatorlEpairlEconstsPintcORootcLcLTGoodRungRsPgRsPgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRunsList),G__get_linked_tagnum(&G__rootdicLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRunsList),G__get_linked_tagnum(&G__rootdicLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGRLCollection))) {
     Root::TGRLCollection *G__Lderived;
     G__Lderived=(Root::TGRLCollection*)0x1000;
     {
       vector<Root::TGoodRunsList,allocator<Root::TGoodRunsList> > *G__Lpbase=(vector<Root::TGoodRunsList,allocator<Root::TGoodRunsList> >*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGRLCollection),G__get_linked_tagnum(&G__rootdicLN_vectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGRLCollection),G__get_linked_tagnum(&G__rootdicLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRunsListReader))) {
     Root::TGoodRunsListReader *G__Lderived;
     G__Lderived=(Root::TGoodRunsListReader*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRunsListReader),G__get_linked_tagnum(&G__rootdicLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablerootdic() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__rootdicLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Root::TMsgLogger& (*)(Root::TMsgLogger&) ",49,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("std::ostream& (*)(std::ostream&) ",49,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("std::ios& (*)(std::ios&) ",49,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TMsgLevel,std::string>",117,G__get_linked_tagnum(&G__rootdicLN_maplERootcLcLTMsgLevelcOstringcOlesslERootcLcLTMsgLevelgRcOallocatorlEpairlEconstsPRootcLcLTMsgLevelcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Root::TMsgLevel,string>",117,G__get_linked_tagnum(&G__rootdicLN_maplERootcLcLTMsgLevelcOstringcOlesslERootcLcLTMsgLevelgRcOallocatorlEpairlEconstsPRootcLcLTMsgLevelcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Root::TMsgLevel,string,less<Root::TMsgLevel> >",117,G__get_linked_tagnum(&G__rootdicLN_maplERootcLcLTMsgLevelcOstringcOlesslERootcLcLTMsgLevelgRcOallocatorlEpairlEconstsPRootcLcLTMsgLevelcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Root::TLumiBlockRange>",117,G__get_linked_tagnum(&G__rootdicLN_vectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__rootdicLN_vectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__rootdicLN_vectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TLumiBlockRange>",117,G__get_linked_tagnum(&G__rootdicLN_vectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgR),0,G__get_linked_tagnum(&G__rootdicLN_Root));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,TGoodRun>",117,G__get_linked_tagnum(&G__rootdicLN_maplEintcORootcLcLTGoodRuncOlesslEintgRcOallocatorlEpairlEconstsPintcORootcLcLTGoodRungRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,Root::TGoodRun>",117,G__get_linked_tagnum(&G__rootdicLN_maplEintcORootcLcLTGoodRuncOlesslEintgRcOallocatorlEpairlEconstsPintcORootcLcLTGoodRungRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,Root::TGoodRun,less<int> >",117,G__get_linked_tagnum(&G__rootdicLN_maplEintcORootcLcLTGoodRuncOlesslEintgRcOallocatorlEpairlEconstsPintcORootcLcLTGoodRungRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TString>",117,G__get_linked_tagnum(&G__rootdicLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TString,less<TString> >",117,G__get_linked_tagnum(&G__rootdicLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Root::TGoodRun>",117,G__get_linked_tagnum(&G__rootdicLN_vectorlERootcLcLTGoodRuncOallocatorlERootcLcLTGoodRungRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlERootcLcLTGoodRuncOallocatorlERootcLcLTGoodRungRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlERootcLcLTGoodRuncOallocatorlERootcLcLTGoodRungRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlERootcLcLTGoodRuncOallocatorlERootcLcLTGoodRungRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlERootcLcLTGoodRuncOallocatorlERootcLcLTGoodRungRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TGoodRunsList>",117,G__get_linked_tagnum(&G__rootdicLN_vectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__rootdicLN_vectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__rootdicLN_vectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Root::TGoodRunsList>",117,G__get_linked_tagnum(&G__rootdicLN_vectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__rootdicLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__rootdicLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__rootdicLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__rootdicLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__rootdicLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__rootdicLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<unsigned int> >",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<unsigned int> >",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__rootdicLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__rootdicLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),256,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),1,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),257,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<unsigned int,allocator<unsigned int> > >",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<int> >",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int> >",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEintcOallocatorlEintgRsPgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__rootdicLN_vectorlEintcOallocatorlEintgRsPgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__rootdicLN_vectorlEintcOallocatorlEintgRsPgR),256,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEintcOallocatorlEintgRsPgR),1,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEintcOallocatorlEintgRsPgR),257,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int,allocator<int> > >",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<double> >",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double> >",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__rootdicLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__rootdicLN_vectorlEdoublecOallocatorlEdoublegRsPgR),256,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEdoublecOallocatorlEdoublegRsPgR),1,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEdoublecOallocatorlEdoublegRsPgR),257,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double,allocator<double> > >",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<float> >",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<float> >",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__rootdicLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__rootdicLN_vectorlEfloatcOallocatorlEfloatgRsPgR),256,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEfloatcOallocatorlEfloatgRsPgR),1,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEfloatcOallocatorlEfloatgRsPgR),257,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<float,allocator<float> > >",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<std::string> >",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<string> >",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEstringcOallocatorlEstringgRsPgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__rootdicLN_vectorlEstringcOallocatorlEstringgRsPgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__rootdicLN_vectorlEstringcOallocatorlEstringgRsPgR),256,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEstringcOallocatorlEstringgRsPgR),1,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEstringcOallocatorlEstringgRsPgR),257,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<string,allocator<string> > >",117,G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,bool>",117,G__get_linked_tagnum(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,bool>",117,G__get_linked_tagnum(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_type",117,G__get_linked_tagnum(&G__rootdicLN_string),0,G__get_linked_tagnum(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mapped_type",103,-1,0,G__get_linked_tagnum(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__rootdicLN_pairlEstringcOboolgR),0,G__get_linked_tagnum(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_compare",117,G__get_linked_tagnum(&G__rootdicLN_lesslEstringgR),0,G__get_linked_tagnum(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__rootdicLN_allocatorlEpairlEconstsPstringcOboolgRsPgR),0,G__get_linked_tagnum(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,bool>",117,G__get_linked_tagnum(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,bool,less<string> >",117,G__get_linked_tagnum(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* GRLStrUtil */
static void G__setup_memvarGRLStrUtil(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__rootdicLN_GRLStrUtil));
   {
   }
   G__tag_memvar_reset();
}


   /* Root */
static void G__setup_memvarRoot(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__rootdicLN_Root));
   {
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__rootdicLN_RootcLcLTMsgLevel),-1,-2,1,G__FastAllocString(2048).Format("kVERBOSE=%lldLL",(long long)Root::kVERBOSE).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__rootdicLN_RootcLcLTMsgLevel),-1,-2,1,G__FastAllocString(2048).Format("kDEBUG=%lldLL",(long long)Root::kDEBUG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__rootdicLN_RootcLcLTMsgLevel),-1,-2,1,G__FastAllocString(2048).Format("kINFO=%lldLL",(long long)Root::kINFO).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__rootdicLN_RootcLcLTMsgLevel),-1,-2,1,G__FastAllocString(2048).Format("kWARNING=%lldLL",(long long)Root::kWARNING).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__rootdicLN_RootcLcLTMsgLevel),-1,-2,1,G__FastAllocString(2048).Format("kERROR=%lldLL",(long long)Root::kERROR).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__rootdicLN_RootcLcLTMsgLevel),-1,-2,1,G__FastAllocString(2048).Format("kFATAL=%lldLL",(long long)Root::kFATAL).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__rootdicLN_RootcLcLTMsgLevel),-1,-2,1,G__FastAllocString(2048).Format("kALWAYS=%lldLL",(long long)Root::kALWAYS).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__rootdicLN_RootcLcLBoolOperation),-1,-2,1,G__FastAllocString(2048).Format("OR=%lldLL",(long long)Root::OR).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__rootdicLN_RootcLcLBoolOperation),-1,-2,1,G__FastAllocString(2048).Format("AND=%lldLL",(long long)Root::AND).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Root::TMsgLogger */
static void G__setup_memvarRootcLcLTMsgLogger(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTMsgLogger));
   { Root::TMsgLogger *p; p=(Root::TMsgLogger*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__rootdicLN_RootcLcLTMsgLevel),-1,-2,4,"m_minLevel=",0,"minimum level for logging output");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__rootdicLN_TObject),-1,-1,4,"m_objSource=",0,"the source TObject (used for name)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__rootdicLN_string),-1,-1,4,"m_strSource=",0,"alternative string source");
   G__memvar_setup((void*)0,117,0,1,G__get_linked_tagnum(&G__rootdicLN_string),-1,-1,4,"m_prefix=",0,"the prefix of the source name");
   G__memvar_setup((void*)0,117,0,1,G__get_linked_tagnum(&G__rootdicLN_string),-1,-1,4,"m_suffix=",0,"suffix following source name");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__rootdicLN_RootcLcLTMsgLevel),-1,-1,4,"m_activeLevel=",0,"active level");
   G__memvar_setup((void*)0,107,0,1,-1,G__defined_typename("size_type"),-1,4,"m_maxSourceSize=",0,"maximum length of source name");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__rootdicLN_maplERootcLcLTMsgLevelcOstringcOlesslERootcLcLTMsgLevelgRcOallocatorlEpairlEconstsPRootcLcLTMsgLevelcOstringgRsPgRsPgR),G__defined_typename("map<TMsgLevel,std::string>"),-1,4,"m_levelMap=",0,"matches output levels with strings");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__rootdicLN_maplERootcLcLTMsgLevelcOstringcOlesslERootcLcLTMsgLevelgRcOallocatorlEpairlEconstsPRootcLcLTMsgLevelcOstringgRsPgRsPgR),G__defined_typename("map<TMsgLevel,std::string>"),-1,4,"m_colorMap=",0,"matches output levels with terminal colors");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rootdicLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Root::TUniqueGRLString */
static void G__setup_memvarRootcLcLTUniqueGRLString(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTUniqueGRLString));
   { Root::TUniqueGRLString *p; p=(Root::TUniqueGRLString*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* Root::TLumiBlockRange */
static void G__setup_memvarRootcLcLTLumiBlockRange(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTLumiBlockRange));
   { Root::TLumiBlockRange *p; p=(Root::TLumiBlockRange*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_begin=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_end=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rootdicLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Root::TGoodRun */
static void G__setup_memvarRootcLcLTGoodRun(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRun));
   { Root::TGoodRun *p; p=(Root::TGoodRun*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_runnr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rootdicLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Root::TGoodRun::SorterL2H */
static void G__setup_memvarRootcLcLTGoodRuncLcLSorterL2H(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRuncLcLSorterL2H));
   { Root::TGoodRun::SorterL2H *p; p=(Root::TGoodRun::SorterL2H*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* Root::TGoodRunsList */
static void G__setup_memvarRootcLcLTGoodRunsList(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRunsList));
   { Root::TGoodRunsList *p; p=(Root::TGoodRunsList*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__rootdicLN_TString),-1,-1,4,"m_version=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__rootdicLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR),G__defined_typename("map<TString,TString>"),-1,4,"m_metadata=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"m_checkGRLInfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"m_hasRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"m_hasLB=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_prevRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_prevLB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rootdicLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Root::TGRLCollection */
static void G__setup_memvarRootcLcLTGRLCollection(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGRLCollection));
   { Root::TGRLCollection *p; p=(Root::TGRLCollection*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"m_checkGRLInfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rootdicLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Root::TGoodRunsListReader */
static void G__setup_memvarRootcLcLTGoodRunsListReader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRunsListReader));
   { Root::TGoodRunsListReader *p; p=(Root::TGoodRunsListReader*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__rootdicLN_TString),-1,-1,4,"m_xmlstring=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__rootdicLN_TString),-1,-1,4,"m_dataCardName=",0,"current xmlfile processed");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__rootdicLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,4,"m_dataCardList=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__rootdicLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,4,"m_xmlstringList=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__rootdicLN_RootcLcLTMsgLogger),-1,-1,4,"m_logger=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGRLCollection),-1,-1,4,"m_grlvec=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rootdicLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > > */
static void G__setup_memvarvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   { vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > > *p; p=(vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > > */
static void G__setup_memvarvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   { vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > > *p; p=(vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > */
static void G__setup_memvarvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   { vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > *p; p=(vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > */
static void G__setup_memvarvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   { vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > *p; p=(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > > */
static void G__setup_memvarvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   { vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > > *p; p=(vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* map<string,bool,less<string>,allocator<pair<const string,bool> > > */
static void G__setup_memvarmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   { map<string,bool,less<string>,allocator<pair<const string,bool> > > *p; p=(map<string,bool,less<string>,allocator<pair<const string,bool> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarrootdic() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncGRLStrUtil(void) {
   /* GRLStrUtil */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__rootdicLN_GRLStrUtil));
   G__memfunc_setup("trim",444,G__rootdic_168_0_1, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 1 - input", (char*)NULL, (void*) G__func2void( (void (*)(string&))(&GRLStrUtil::trim) ), 0);
   G__memfunc_setup("split",556,G__rootdic_168_0_2, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 11 - input u 'string' - 1 - first "
"u 'string' - 1 - second", (char*)NULL, (void*) G__func2void( (void (*)(const string&, string&, string&))(&GRLStrUtil::split) ), 0);
   G__memfunc_setup("split",556,G__rootdic_168_0_3, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 1, 0, "u 'string' - 0 - input", (char*)NULL, (void*) G__func2void( (vector<std::string> (*)(string))(&GRLStrUtil::split) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRoot(void) {
   /* Root */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__rootdicLN_Root));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRootcLcLTMsgLogger(void) {
   /* Root::TMsgLogger */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTMsgLogger));
   G__memfunc_setup("TMsgLogger",987,G__rootdic_425_0_1, 105, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTMsgLogger), -1, 0, 2, 1, 1, 0, 
"U 'TObject' - 10 - source i 'Root::TMsgLevel' - 0 'kINFO' minLevel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TMsgLogger",987,G__rootdic_425_0_2, 105, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTMsgLogger), -1, 0, 2, 1, 1, 0, 
"u 'string' - 11 - source i 'Root::TMsgLevel' - 0 'kINFO' minLevel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TMsgLogger",987,G__rootdic_425_0_3, 105, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTMsgLogger), -1, 0, 1, 1, 1, 0, "i 'Root::TMsgLevel' - 0 'kINFO' minLevel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TMsgLogger",987,G__rootdic_425_0_4, 105, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTMsgLogger), -1, 0, 1, 1, 1, 0, "u 'Root::TMsgLogger' - 11 - parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSource",925,G__rootdic_425_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - source", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSource",925,G__rootdic_425_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - source", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSource",925,G__rootdic_425_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - source", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSource",913,G__rootdic_425_0_8, 117, G__get_linked_tagnum(&G__rootdicLN_string), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxSourceSize",1618,G__rootdic_425_0_9, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPrintedSource",1639,G__rootdic_425_0_10, 117, G__get_linked_tagnum(&G__rootdicLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFormattedSource",1847,G__rootdic_425_0_11, 117, G__get_linked_tagnum(&G__rootdicLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMinLevel",1084,G__rootdic_425_0_12, 105, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTMsgLevel), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMinLevelStr",1397,G__rootdic_425_0_13, 117, G__get_linked_tagnum(&G__rootdicLN_string), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MapLevel",790,G__rootdic_425_0_14, 105, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTMsgLevel), -1, 0, 1, 1, 1, 8, "u 'TString' - 11 - instr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__rootdic_425_0_15, 117, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTMsgLogger), -1, 1, 1, 1, 1, 0, "u 'Root::TMsgLogger' - 11 - parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("endmsg",638,G__rootdic_425_0_16, 117, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTMsgLogger), -1, 1, 1, 3, 1, 0, "u 'Root::TMsgLogger' - 1 - logger", (char*)NULL, (void*) G__func2void( (Root::TMsgLogger& (*)(Root::TMsgLogger&))(&Root::TMsgLogger::endmsg) ), 0);
   G__memfunc_setup("operator<<",996,G__rootdic_425_0_17, 117, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTMsgLogger), -1, 1, 1, 1, 1, 0, "1 - 'std::ios& (*)(std::ios&) ' 0 - _f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<<",996,G__rootdic_425_0_18, 117, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTMsgLogger), -1, 1, 1, 1, 1, 0, "i 'Root::TMsgLevel' - 0 - level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMinLevel",1096,G__rootdic_425_0_19, 121, -1, -1, 0, 1, 3, 1, 0, "i 'Root::TMsgLevel' - 0 - minLevel", (char*)NULL, (void*) G__func2void( (void (*)(Root::TMsgLevel))(&Root::TMsgLogger::SetMinLevel) ), 0);
   G__memfunc_setup("Send",394,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitMaps",805,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteMsg",818,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 8, 
"i 'Root::TMsgLevel' - 0 - level u 'string' - 11 - line", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__rootdic_425_0_23, 85, G__get_linked_tagnum(&G__rootdicLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Root::TMsgLogger::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__rootdic_425_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Root::TMsgLogger::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__rootdic_425_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Root::TMsgLogger::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__rootdic_425_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Root::TMsgLogger::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__rootdicLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__rootdic_425_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__rootdic_425_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Root::TMsgLogger::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__rootdic_425_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Root::TMsgLogger::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__rootdic_425_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Root::TMsgLogger::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__rootdic_425_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Root::TMsgLogger::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TMsgLogger", 1113, G__rootdic_425_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRootcLcLTUniqueGRLString(void) {
   /* Root::TUniqueGRLString */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTUniqueGRLString));
   G__memfunc_setup("instance",853,G__rootdic_435_0_1, 117, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTUniqueGRLString), -1, 1, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Root::TUniqueGRLString& (*)())(&Root::TUniqueGRLString::instance) ), 0);
   G__memfunc_setup("SetTo",495,G__rootdic_435_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TUniqueGRLString",1575,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTUniqueGRLString), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TUniqueGRLString", 1575, G__rootdic_435_0_4, (int) ('i'), G__get_linked_tagnum(&G__rootdicLN_RootcLcLTUniqueGRLString), -1, 0, 1, 1, 1, 0, "u 'Root::TUniqueGRLString' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__rootdic_435_0_5, (int) ('u'), G__get_linked_tagnum(&G__rootdicLN_RootcLcLTUniqueGRLString), -1, 1, 1, 1, 1, 0, "u 'Root::TUniqueGRLString' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRootcLcLTLumiBlockRange(void) {
   /* Root::TLumiBlockRange */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTLumiBlockRange));
   G__memfunc_setup("TLumiBlockRange",1475,G__rootdic_436_0_1, 105, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTLumiBlockRange), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLumiBlockRange",1475,G__rootdic_436_0_2, 105, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTLumiBlockRange), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 11 - start i - 'Int_t' 11 '2147483647' end", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TLumiBlockRange",1475,G__rootdic_436_0_3, 105, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTLumiBlockRange), -1, 0, 1, 1, 1, 0, "u 'Root::TLumiBlockRange' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__rootdic_436_0_4, 117, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTLumiBlockRange), -1, 1, 1, 1, 1, 0, "u 'Root::TLumiBlockRange' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOverlapWith",1429,G__rootdic_436_0_5, 117, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTLumiBlockRange), -1, 0, 1, 1, 1, 9, "u 'Root::TLumiBlockRange' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPartOnlyIn",1296,G__rootdic_436_0_6, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgR), G__defined_typename("vector<Root::TLumiBlockRange>"), 0, 1, 1, 1, 9, "u 'Root::TLumiBlockRange' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPartNotIn",1183,G__rootdic_436_0_7, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgR), G__defined_typename("vector<Root::TLumiBlockRange>"), 0, 1, 1, 1, 9, "u 'Root::TLumiBlockRange' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Contains",831,G__rootdic_436_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 11 - number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Begin",485,G__rootdic_436_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("End",279,G__rootdic_436_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEmpty",715,G__rootdic_436_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBegin",785,G__rootdic_436_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 11 - begin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnd",579,G__rootdic_436_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 11 - end", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Summary",750,G__rootdic_436_0_14, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__rootdic_436_0_15, 85, G__get_linked_tagnum(&G__rootdicLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Root::TLumiBlockRange::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__rootdic_436_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Root::TLumiBlockRange::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__rootdic_436_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Root::TLumiBlockRange::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__rootdic_436_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Root::TLumiBlockRange::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__rootdicLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__rootdic_436_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__rootdic_436_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Root::TLumiBlockRange::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__rootdic_436_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Root::TLumiBlockRange::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__rootdic_436_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Root::TLumiBlockRange::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__rootdic_436_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Root::TLumiBlockRange::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TLumiBlockRange", 1601, G__rootdic_436_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRootcLcLTGoodRun(void) {
   /* Root::TGoodRun */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRun));
   G__memfunc_setup("TGoodRun",786,G__rootdic_441_0_1, 105, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRun), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TGoodRun",786,G__rootdic_441_0_2, 105, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRun), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 11 - runnr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TGoodRun",786,G__rootdic_441_0_3, 105, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRun), -1, 0, 1, 1, 1, 0, "u 'Root::TGoodRun' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__rootdic_441_0_4, 117, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRun), -1, 1, 1, 1, 1, 0, "u 'Root::TGoodRun' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOverlapWith",1429,G__rootdic_441_0_5, 117, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRun), -1, 0, 1, 1, 1, 9, "u 'Root::TGoodRun' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSumWith",1009,G__rootdic_441_0_6, 117, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRun), -1, 0, 1, 1, 1, 9, "u 'Root::TGoodRun' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPartOnlyIn",1296,G__rootdic_441_0_7, 117, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRun), -1, 0, 1, 1, 1, 9, "u 'Root::TGoodRun' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPartNotIn",1183,G__rootdic_441_0_8, 117, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRun), -1, 0, 1, 1, 1, 9, "u 'Root::TGoodRun' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEmpty",715,G__rootdic_441_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasLB",426,G__rootdic_441_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 11 - lumiblocknr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Find",385,G__rootdic_441_0_11, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 11 - lumiblocknr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Find",385,G__rootdic_441_0_12, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgRcLcLiterator), G__defined_typename("vector<Root::TLumiBlockRange,allocator<Root::TLumiBlockRange> >::const_iterator"), 0, 1, 1, 1, 8, "i - 'Int_t' 11 - lumiblocknr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunNumber",1214,G__rootdic_441_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunNumber",1226,G__rootdic_441_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 11 - runnr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Summary",750,G__rootdic_441_0_15, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Sort",424,G__rootdic_441_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Compress",844,G__rootdic_441_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddLB",407,G__rootdic_441_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 11 - lumiblocknr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__rootdic_441_0_19, 85, G__get_linked_tagnum(&G__rootdicLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Root::TGoodRun::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__rootdic_441_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Root::TGoodRun::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__rootdic_441_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Root::TGoodRun::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__rootdic_441_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Root::TGoodRun::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__rootdicLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__rootdic_441_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__rootdic_441_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Root::TGoodRun::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__rootdic_441_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Root::TGoodRun::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__rootdic_441_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Root::TGoodRun::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__rootdic_441_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Root::TGoodRun::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TGoodRun", 912, G__rootdic_441_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRootcLcLTGoodRuncLcLSorterL2H(void) {
   /* Root::TGoodRun::SorterL2H */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRuncLcLSorterL2H));
   G__memfunc_setup("SorterL2H",837,G__rootdic_442_0_1, 105, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRuncLcLSorterL2H), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__rootdic_442_0_2, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'Root::TLumiBlockRange' - 11 - p1 u 'Root::TLumiBlockRange' - 11 - p2", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SorterL2H", 837, G__rootdic_442_0_3, (int) ('i'), G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRuncLcLSorterL2H), -1, 0, 1, 1, 1, 0, "u 'Root::TGoodRun::SorterL2H' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SorterL2H", 963, G__rootdic_442_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__rootdic_442_0_5, (int) ('u'), G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRuncLcLSorterL2H), -1, 1, 1, 1, 1, 0, "u 'Root::TGoodRun::SorterL2H' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRootcLcLTGoodRunsList(void) {
   /* Root::TGoodRunsList */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRunsList));
   G__memfunc_setup("TGoodRunsList",1313,G__rootdic_443_0_1, 105, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRunsList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TGoodRunsList",1313,G__rootdic_443_0_2, 105, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRunsList), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TGoodRunsList",1313,G__rootdic_443_0_3, 105, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRunsList), -1, 0, 1, 1, 1, 0, "u 'Root::TGoodRunsList' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__rootdic_443_0_4, 117, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRunsList), -1, 1, 1, 1, 1, 0, "u 'Root::TGoodRunsList' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddGRL",494,G__rootdic_443_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Root::TGoodRunsList' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOverlapWith",1429,G__rootdic_443_0_6, 117, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRunsList), -1, 0, 1, 1, 1, 9, "u 'Root::TGoodRunsList' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSumWith",1009,G__rootdic_443_0_7, 117, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRunsList), -1, 0, 1, 1, 1, 9, "u 'Root::TGoodRunsList' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPartOnlyIn",1296,G__rootdic_443_0_8, 117, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRunsList), -1, 0, 1, 1, 1, 9, "u 'Root::TGoodRunsList' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPartNotIn",1183,G__rootdic_443_0_9, 117, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRunsList), -1, 0, 1, 1, 1, 9, "u 'Root::TGoodRunsList' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasTriggerInfo",1404,G__rootdic_443_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasRun",593,G__rootdic_443_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 11 - runnr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasRunLumiBlock",1491,G__rootdic_443_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 11 - runnr i - 'Int_t' 11 - lumiblocknr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasSameGRLInfo",1299,G__rootdic_443_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'Root::TGoodRunsList' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasOverlapWith",1425,G__rootdic_443_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"u 'Root::TGoodRunsList' - 11 - other g - - 0 'false' verb", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddRunLumiBlock",1472,G__rootdic_443_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 11 - runnr i - 'Int_t' 11 - lumiblocknr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVersion",1042,G__rootdic_443_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - version", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddMetaData",1034,G__rootdic_443_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 11 - key u 'TString' - 11 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMetaData",1069,G__rootdic_443_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >' 'map<TString,TString>' 11 - metadata", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCheckGRLInfo",1403,G__rootdic_443_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' check", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCheckGRLInfo",1391,G__rootdic_443_0_20, 103, -1, G__defined_typename("Bool_t"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVersion",1030,G__rootdic_443_0_21, 117, G__get_linked_tagnum(&G__rootdicLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMetaData",1057,G__rootdic_443_0_22, 117, G__get_linked_tagnum(&G__rootdicLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR), G__defined_typename("map<TString,TString>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMetaDataSize",1468,G__rootdic_443_0_23, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Summary",750,G__rootdic_443_0_24, 121, -1, -1, 0, 1, 1, 1, 8, "g - 'Bool_t' 0 'kFALSE' verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEmpty",715,G__rootdic_443_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunlist",1041,G__rootdic_443_0_26, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGoodRuns",1105,G__rootdic_443_0_27, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlERootcLcLTGoodRuncOallocatorlERootcLcLTGoodRungRsPgR), G__defined_typename("vector<Root::TGoodRun>"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTriggerList",1424,G__rootdic_443_0_28, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStreamList",1320,G__rootdic_443_0_29, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSuggestedName",1612,G__rootdic_443_0_30, 117, G__get_linked_tagnum(&G__rootdicLN_TString), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Compress",844,G__rootdic_443_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__rootdic_443_0_32, 85, G__get_linked_tagnum(&G__rootdicLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Root::TGoodRunsList::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__rootdic_443_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Root::TGoodRunsList::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__rootdic_443_0_34, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Root::TGoodRunsList::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__rootdic_443_0_35, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Root::TGoodRunsList::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__rootdicLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__rootdic_443_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__rootdic_443_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Root::TGoodRunsList::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__rootdic_443_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Root::TGoodRunsList::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__rootdic_443_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Root::TGoodRunsList::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__rootdic_443_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Root::TGoodRunsList::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TGoodRunsList", 1439, G__rootdic_443_0_44, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRootcLcLTGRLCollection(void) {
   /* Root::TGRLCollection */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGRLCollection));
   G__memfunc_setup("TGRLCollection",1349,G__rootdic_469_0_1, 105, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGRLCollection), -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' checkGRLInfo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TGRLCollection",1349,G__rootdic_469_0_2, 105, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGRLCollection), -1, 0, 1, 1, 1, 0, "u 'Root::TGRLCollection' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__rootdic_469_0_3, 117, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGRLCollection), -1, 1, 1, 1, 1, 0, "u 'Root::TGRLCollection' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVersion",1042,G__rootdic_469_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - version", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMetaData",1069,G__rootdic_469_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >' 'map<TString,TString>' 11 - metadata", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCheckGRLInfo",1403,G__rootdic_469_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' check", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasRun",593,G__rootdic_469_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 11 - runnr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasRunLumiBlock",1491,G__rootdic_469_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 11 - runnr i - 'Int_t' 11 - lumiblocknr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEmpty",715,G__rootdic_469_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasGoodRunsList",1513,G__rootdic_469_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TString' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMergedGoodRunsList",2113,G__rootdic_469_0_11, 117, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRunsList), -1, 0, 1, 1, 1, 9, "i 'Root::BoolOperation' - 11 'OR' operation", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGoodRunsList",1517,G__rootdic_469_0_12, 117, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRunsList), -1, 0, 1, 1, 1, 9, "h - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__rootdic_469_0_13, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__rootdic_469_0_14, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgRcLcLiterator), G__defined_typename("vector<Root::TGoodRunsList,allocator<Root::TGoodRunsList> >::const_iterator"), 0, 1, 1, 1, 8, "u 'TString' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMergedGRLCollection",2149,G__rootdic_469_0_15, 117, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGRLCollection), -1, 0, 1, 1, 1, 9, "i 'Root::BoolOperation' - 11 'OR' operation", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOverlapWith",1429,G__rootdic_469_0_16, 117, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGRLCollection), -1, 0, 1, 1, 1, 9, "u 'Root::TGoodRunsList' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__rootdic_469_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Summary",750,G__rootdic_469_0_18, 121, -1, -1, 0, 1, 1, 1, 8, "g - 'Bool_t' 0 'kFALSE' verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__rootdic_469_0_19, 85, G__get_linked_tagnum(&G__rootdicLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Root::TGRLCollection::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__rootdic_469_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Root::TGRLCollection::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__rootdic_469_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Root::TGRLCollection::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__rootdic_469_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Root::TGRLCollection::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__rootdicLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__rootdic_469_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__rootdic_469_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Root::TGRLCollection::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__rootdic_469_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Root::TGRLCollection::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__rootdic_469_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Root::TGRLCollection::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__rootdic_469_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Root::TGRLCollection::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TGRLCollection", 1475, G__rootdic_469_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRootcLcLTGoodRunsListReader(void) {
   /* Root::TGoodRunsListReader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRunsListReader));
   G__memfunc_setup("TGoodRunsListReader",1908,G__rootdic_508_0_1, 105, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRunsListReader), -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' checkGRLInfo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TGoodRunsListReader",1908,G__rootdic_508_0_2, 105, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRunsListReader), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 11 - dataCardName g - 'Bool_t' 0 'kFALSE' checkGRLInfo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Interpret",957,G__rootdic_508_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXMLString",1160,G__rootdic_508_0_4, 117, G__get_linked_tagnum(&G__rootdicLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXMLFilename",1330,G__rootdic_508_0_5, 117, G__get_linked_tagnum(&G__rootdicLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddXMLFile",890,G__rootdic_508_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - xmlfile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddXMLString",1137,G__rootdic_508_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - xmlstring", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXMLString",1172,G__rootdic_508_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - xmlstring", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXMLFile",925,G__rootdic_508_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - xmlfile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCheckGRLInfo",1403,G__rootdic_508_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' check", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMergedGoodRunsList",2113,G__rootdic_508_0_11, 117, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRunsList), -1, 0, 1, 1, 1, 9, "i 'Root::BoolOperation' - 11 'OR' operation", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGoodRunsList",1517,G__rootdic_508_0_12, 117, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRunsList), -1, 0, 1, 1, 1, 9, "h - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGRLCollection",1553,G__rootdic_508_0_13, 117, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGRLCollection), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMergedGRLCollection",2149,G__rootdic_508_0_14, 117, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGRLCollection), -1, 0, 1, 1, 1, 9, "i 'Root::BoolOperation' - 11 'OR' operation", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__rootdic_508_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadNamedLumiRange",1765,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TXMLNode' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadLumiBlockCollection",2314,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TXMLNode' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadAttribs",1109,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TXMLNode' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLumiBlockCollection",2222,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__rootdicLN_RootcLcLTGoodRun), -1, 0, 1, 1, 4, 0, "U 'TXMLNode' - 0 - dataNode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__rootdic_508_0_20, 85, G__get_linked_tagnum(&G__rootdicLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Root::TGoodRunsListReader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__rootdic_508_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Root::TGoodRunsListReader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__rootdic_508_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Root::TGoodRunsListReader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__rootdic_508_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Root::TGoodRunsListReader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__rootdicLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__rootdic_508_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__rootdic_508_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Root::TGoodRunsListReader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__rootdic_508_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Root::TGoodRunsListReader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__rootdic_508_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Root::TGoodRunsListReader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__rootdic_508_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Root::TGoodRunsListReader::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TGoodRunsListReader", 2034, G__rootdic_508_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR(void) {
   /* vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__rootdic_514_0_1, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR), G__defined_typename("vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__rootdic_514_0_2, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR), G__defined_typename("vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__rootdic_514_0_3, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__rootdic_514_0_4, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__rootdic_514_0_5, 117, G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__rootdic_514_0_6, 117, G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__rootdic_514_0_7, 107, -1, G__defined_typename("vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__rootdic_514_0_8, 107, -1, G__defined_typename("vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__rootdic_514_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__rootdic_514_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type' 0 - sz u 'vector<unsigned int,allocator<unsigned int> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__rootdic_514_0_11, 107, -1, G__defined_typename("vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__rootdic_514_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__rootdic_514_0_13, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR), G__defined_typename("vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__rootdic_514_0_14, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR), G__defined_typename("vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >",10748,G__rootdic_514_0_15, 105, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >",10748,G__rootdic_514_0_16, 105, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type' 0 - n u 'vector<unsigned int,allocator<unsigned int> >' - 11 '(vector<unsigned int,allocator<unsigned int> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >",10748,G__rootdic_514_0_17, 105, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >",10748,G__rootdic_514_0_18, 105, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator' 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::const_iterator' 10 - first u 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator' 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__rootdic_514_0_19, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__rootdic_514_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__rootdic_514_0_21, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__rootdic_514_0_22, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__rootdic_514_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned int,allocator<unsigned int> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__rootdic_514_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__rootdic_514_0_25, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator' - 0 - position u 'vector<unsigned int,allocator<unsigned int> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__rootdic_514_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator' - 0 - position u 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator' 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::const_iterator' 10 - first "
"u 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator' 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__rootdic_514_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator' - 0 - position k - 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::size_type' 0 - n "
"u 'vector<unsigned int,allocator<unsigned int> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__rootdic_514_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__rootdic_514_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__rootdic_514_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator' - 0 - first u 'vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__rootdic_514_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >", 10874, G__rootdic_514_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR(void) {
   /* vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__rootdic_518_0_1, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__rootdic_518_0_2, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__rootdic_518_0_3, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__rootdic_518_0_4, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__rootdic_518_0_5, 117, G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__rootdic_518_0_6, 117, G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__rootdic_518_0_7, 107, -1, G__defined_typename("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__rootdic_518_0_8, 107, -1, G__defined_typename("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__rootdic_518_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__rootdic_518_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type' 0 - sz u 'vector<int,allocator<int> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__rootdic_518_0_11, 107, -1, G__defined_typename("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__rootdic_518_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__rootdic_518_0_13, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__rootdic_518_0_14, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >",7176,G__rootdic_518_0_15, 105, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >",7176,G__rootdic_518_0_16, 105, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type' 0 - n u 'vector<int,allocator<int> >' - 11 '(vector<int,allocator<int> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >",7176,G__rootdic_518_0_17, 105, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >",7176,G__rootdic_518_0_18, 105, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator' 10 - first u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__rootdic_518_0_19, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__rootdic_518_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__rootdic_518_0_21, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEintcOallocatorlEintgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__rootdic_518_0_22, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEintcOallocatorlEintgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__rootdic_518_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<int,allocator<int> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__rootdic_518_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__rootdic_518_0_25, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' - 0 - position u 'vector<int,allocator<int> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__rootdic_518_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' - 0 - position u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator' 10 - first "
"u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__rootdic_518_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' - 0 - position k - 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::size_type' 0 - n "
"u 'vector<int,allocator<int> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__rootdic_518_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__rootdic_518_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__rootdic_518_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' - 0 - first u 'vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__rootdic_518_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >", 7302, G__rootdic_518_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR(void) {
   /* vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__rootdic_522_0_1, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__rootdic_522_0_2, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__rootdic_522_0_3, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__rootdic_522_0_4, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__rootdic_522_0_5, 117, G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__rootdic_522_0_6, 117, G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__rootdic_522_0_7, 107, -1, G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__rootdic_522_0_8, 107, -1, G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__rootdic_522_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__rootdic_522_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - sz u 'vector<double,allocator<double> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__rootdic_522_0_11, 107, -1, G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__rootdic_522_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__rootdic_522_0_13, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__rootdic_522_0_14, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >",8392,G__rootdic_522_0_15, 105, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >",8392,G__rootdic_522_0_16, 105, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - n u 'vector<double,allocator<double> >' - 11 '(vector<double,allocator<double> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >",8392,G__rootdic_522_0_17, 105, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >",8392,G__rootdic_522_0_18, 105, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator' 10 - first u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__rootdic_522_0_19, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__rootdic_522_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__rootdic_522_0_21, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEdoublecOallocatorlEdoublegRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__rootdic_522_0_22, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEdoublecOallocatorlEdoublegRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__rootdic_522_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__rootdic_522_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__rootdic_522_0_25, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' - 0 - position u 'vector<double,allocator<double> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__rootdic_522_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' - 0 - position u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator' 10 - first "
"u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__rootdic_522_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' - 0 - position k - 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::size_type' 0 - n "
"u 'vector<double,allocator<double> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__rootdic_522_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__rootdic_522_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__rootdic_522_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' - 0 - first u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__rootdic_522_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >", 8518, G__rootdic_522_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR(void) {
   /* vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__rootdic_526_0_1, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__rootdic_526_0_2, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__rootdic_526_0_3, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__rootdic_526_0_4, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__rootdic_526_0_5, 117, G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__rootdic_526_0_6, 117, G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__rootdic_526_0_7, 107, -1, G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__rootdic_526_0_8, 107, -1, G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__rootdic_526_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__rootdic_526_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - sz u 'vector<float,allocator<float> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__rootdic_526_0_11, 107, -1, G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__rootdic_526_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__rootdic_526_0_13, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__rootdic_526_0_14, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >",7988,G__rootdic_526_0_15, 105, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >",7988,G__rootdic_526_0_16, 105, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n u 'vector<float,allocator<float> >' - 11 '(vector<float,allocator<float> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >",7988,G__rootdic_526_0_17, 105, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >",7988,G__rootdic_526_0_18, 105, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator' 10 - first u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__rootdic_526_0_19, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__rootdic_526_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__rootdic_526_0_21, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEfloatcOallocatorlEfloatgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__rootdic_526_0_22, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEfloatcOallocatorlEfloatgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__rootdic_526_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__rootdic_526_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__rootdic_526_0_25, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - position u 'vector<float,allocator<float> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__rootdic_526_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - position u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator' 10 - first "
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__rootdic_526_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - position k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n "
"u 'vector<float,allocator<float> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__rootdic_526_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__rootdic_526_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__rootdic_526_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - first u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__rootdic_526_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >", 8114, G__rootdic_526_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR(void) {
   /* vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__rootdic_530_0_1, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__rootdic_530_0_2, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__rootdic_530_0_3, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__rootdic_530_0_4, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__rootdic_530_0_5, 117, G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__rootdic_530_0_6, 117, G__get_linked_tagnum(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__rootdic_530_0_7, 107, -1, G__defined_typename("vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__rootdic_530_0_8, 107, -1, G__defined_typename("vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__rootdic_530_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__rootdic_530_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type' 0 - sz u 'vector<string,allocator<string> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__rootdic_530_0_11, 107, -1, G__defined_typename("vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__rootdic_530_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__rootdic_530_0_13, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__rootdic_530_0_14, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >",8504,G__rootdic_530_0_15, 105, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >",8504,G__rootdic_530_0_16, 105, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type' 0 - n u 'vector<string,allocator<string> >' - 11 '(vector<string,allocator<string> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >",8504,G__rootdic_530_0_17, 105, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >",8504,G__rootdic_530_0_18, 105, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator' 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::const_iterator' 10 - first u 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator' 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__rootdic_530_0_19, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__rootdic_530_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__rootdic_530_0_21, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEstringcOallocatorlEstringgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__rootdic_530_0_22, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEstringcOallocatorlEstringgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__rootdic_530_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<string,allocator<string> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__rootdic_530_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__rootdic_530_0_25, 117, G__get_linked_tagnum(&G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator' - 0 - position u 'vector<string,allocator<string> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__rootdic_530_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator' - 0 - position u 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator' 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::const_iterator' 10 - first "
"u 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator' 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__rootdic_530_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator' - 0 - position k - 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type' 0 - n "
"u 'vector<string,allocator<string> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__rootdic_530_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__rootdic_530_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__rootdic_530_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator' - 0 - first u 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__rootdic_530_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >", 8630, G__rootdic_530_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR(void) {
   /* map<string,bool,less<string>,allocator<pair<const string,bool> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   G__memfunc_setup("map<string,bool,less<string>,allocator<pair<const string,bool> > >",6302,G__rootdic_535_0_1, 105, G__get_linked_tagnum(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,bool,less<string>,allocator<pair<const string,bool> > >",6302,G__rootdic_535_0_2, 105, G__get_linked_tagnum(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator' - 0 - first u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,bool,less<string>,allocator<pair<const string,bool> > >",6302,G__rootdic_535_0_3, 105, G__get_linked_tagnum(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator' - 0 - first u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,bool,less<string>,allocator<pair<const string,bool> > >",6302,G__rootdic_535_0_4, 105, G__get_linked_tagnum(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__rootdic_535_0_5, 117, G__get_linked_tagnum(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__rootdic_535_0_6, 117, G__get_linked_tagnum(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__rootdic_535_0_7, 117, G__get_linked_tagnum(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__rootdic_535_0_8, 117, G__get_linked_tagnum(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__rootdic_535_0_9, 117, G__get_linked_tagnum(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__rootdic_535_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__rootdic_535_0_11, 107, -1, G__defined_typename("map<string,bool,less<string>,allocator<pair<const string,bool> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__rootdic_535_0_12, 107, -1, G__defined_typename("map<string,bool,less<string>,allocator<pair<const string,bool> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__rootdic_535_0_13, 103, -1, -1, 1, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__rootdic_535_0_14, 117, G__get_linked_tagnum(&G__rootdicLN_pairlEmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiteratorcOboolgR), -1, 0, 1, 1, 1, 0, "u 'pair<string,bool>' 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__rootdic_535_0_15, 117, G__get_linked_tagnum(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator' - 0 - position u 'pair<string,bool>' 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__rootdic_535_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator' - 0 - first u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__rootdic_535_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator' - 0 - first u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__rootdic_535_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__rootdic_535_0_19, 107, -1, G__defined_typename("map<string,bool,less<string>,allocator<pair<const string,bool> > >::size_type"), 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__rootdic_535_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator' - 0 - first u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__rootdic_535_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__rootdic_535_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__rootdic_535_0_23, 117, G__get_linked_tagnum(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("count",553,G__rootdic_535_0_24, 107, -1, G__defined_typename("map<string,bool,less<string>,allocator<pair<const string,bool> > >::size_type"), 0, 1, 1, 1, 8, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lower_bound",1184,G__rootdic_535_0_25, 117, G__get_linked_tagnum(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("upper_bound",1187,G__rootdic_535_0_26, 117, G__get_linked_tagnum(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~map<string,bool,less<string>,allocator<pair<const string,bool> > >", 6428, G__rootdic_535_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncrootdic() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalrootdic() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcrootdic() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__rootdicLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__rootdicLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__rootdicLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__rootdicLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__rootdicLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__rootdicLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__rootdicLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__rootdicLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__rootdicLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__rootdicLN_ios_base = { "ios_base" , 99 , -1 };
G__linked_taginfo G__rootdicLN_basic_ioslEcharcOchar_traitslEchargRsPgR = { "basic_ios<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__rootdicLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__rootdicLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__rootdicLN_basic_ostringstreamlEcharcOchar_traitslEchargRcOallocatorlEchargRsPgR = { "basic_ostringstream<char,char_traits<char>,allocator<char> >" , 99 , -1 };
G__linked_taginfo G__rootdicLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__rootdicLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__rootdicLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__rootdicLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__rootdicLN_GRLStrUtil = { "GRLStrUtil" , 110 , -1 };
G__linked_taginfo G__rootdicLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__rootdicLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__rootdicLN_lesslEstringgR = { "less<string>" , 115 , -1 };
G__linked_taginfo G__rootdicLN_Root = { "Root" , 110 , -1 };
G__linked_taginfo G__rootdicLN_RootcLcLTMsgLevel = { "Root::TMsgLevel" , 101 , -1 };
G__linked_taginfo G__rootdicLN_RootcLcLTMsgLogger = { "Root::TMsgLogger" , 99 , -1 };
G__linked_taginfo G__rootdicLN_maplERootcLcLTMsgLevelcOstringcOlesslERootcLcLTMsgLevelgRcOallocatorlEpairlEconstsPRootcLcLTMsgLevelcOstringgRsPgRsPgR = { "map<Root::TMsgLevel,string,less<Root::TMsgLevel>,allocator<pair<const Root::TMsgLevel,string> > >" , 99 , -1 };
G__linked_taginfo G__rootdicLN_RootcLcLTUniqueGRLString = { "Root::TUniqueGRLString" , 99 , -1 };
G__linked_taginfo G__rootdicLN_RootcLcLTLumiBlockRange = { "Root::TLumiBlockRange" , 99 , -1 };
G__linked_taginfo G__rootdicLN_vectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgR = { "vector<Root::TLumiBlockRange,allocator<Root::TLumiBlockRange> >" , 99 , -1 };
G__linked_taginfo G__rootdicLN_vectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgRcLcLiterator = { "vector<Root::TLumiBlockRange,allocator<Root::TLumiBlockRange> >::iterator" , 99 , -1 };
G__linked_taginfo G__rootdicLN_reverse_iteratorlEvectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Root::TLumiBlockRange,allocator<Root::TLumiBlockRange> >::iterator>" , 99 , -1 };
G__linked_taginfo G__rootdicLN_RootcLcLTGoodRun = { "Root::TGoodRun" , 99 , -1 };
G__linked_taginfo G__rootdicLN_RootcLcLTGoodRuncLcLSorterL2H = { "Root::TGoodRun::SorterL2H" , 115 , -1 };
G__linked_taginfo G__rootdicLN_RootcLcLTGoodRunsList = { "Root::TGoodRunsList" , 99 , -1 };
G__linked_taginfo G__rootdicLN_maplEintcORootcLcLTGoodRuncOlesslEintgRcOallocatorlEpairlEconstsPintcORootcLcLTGoodRungRsPgRsPgR = { "map<int,Root::TGoodRun,less<int>,allocator<pair<const int,Root::TGoodRun> > >" , 99 , -1 };
G__linked_taginfo G__rootdicLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR = { "map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >" , 99 , -1 };
G__linked_taginfo G__rootdicLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__rootdicLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__rootdicLN_vectorlERootcLcLTGoodRuncOallocatorlERootcLcLTGoodRungRsPgR = { "vector<Root::TGoodRun,allocator<Root::TGoodRun> >" , 99 , -1 };
G__linked_taginfo G__rootdicLN_reverse_iteratorlEvectorlERootcLcLTGoodRuncOallocatorlERootcLcLTGoodRungRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Root::TGoodRun,allocator<Root::TGoodRun> >::iterator>" , 99 , -1 };
G__linked_taginfo G__rootdicLN_RootcLcLBoolOperation = { "Root::BoolOperation" , 101 , -1 };
G__linked_taginfo G__rootdicLN_RootcLcLTGRLCollection = { "Root::TGRLCollection" , 99 , -1 };
G__linked_taginfo G__rootdicLN_vectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgR = { "vector<Root::TGoodRunsList,allocator<Root::TGoodRunsList> >" , 99 , -1 };
G__linked_taginfo G__rootdicLN_vectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgRcLcLiterator = { "vector<Root::TGoodRunsList,allocator<Root::TGoodRunsList> >::iterator" , 99 , -1 };
G__linked_taginfo G__rootdicLN_reverse_iteratorlEvectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Root::TGoodRunsList,allocator<Root::TGoodRunsList> >::iterator>" , 99 , -1 };
G__linked_taginfo G__rootdicLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__rootdicLN_TXMLNode = { "TXMLNode" , 99 , -1 };
G__linked_taginfo G__rootdicLN_RootcLcLTGoodRunsListReader = { "Root::TGoodRunsListReader" , 99 , -1 };
G__linked_taginfo G__rootdicLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__rootdicLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR = { "vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >" , 99 , -1 };
G__linked_taginfo G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiterator = { "vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__rootdicLN_reverse_iteratorlEvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR = { "vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >" , 99 , -1 };
G__linked_taginfo G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator = { "vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__rootdicLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR = { "vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >" , 99 , -1 };
G__linked_taginfo G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiterator = { "vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__rootdicLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR = { "vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >" , 99 , -1 };
G__linked_taginfo G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator = { "vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__rootdicLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR = { "vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >" , 99 , -1 };
G__linked_taginfo G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiterator = { "vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__rootdicLN_reverse_iteratorlEvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__rootdicLN_allocatorlEpairlEconstsPstringcOboolgRsPgR = { "allocator<pair<const string,bool> >" , 99 , -1 };
G__linked_taginfo G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR = { "map<string,bool,less<string>,allocator<pair<const string,bool> > >" , 99 , -1 };
G__linked_taginfo G__rootdicLN_pairlEstringcOboolgR = { "pair<string,bool>" , 115 , -1 };
G__linked_taginfo G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator = { "map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator" , 99 , -1 };
G__linked_taginfo G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLreverse_iterator = { "map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__rootdicLN_pairlEmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiteratorcOboolgR = { "pair<map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator,bool>" , 115 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablerootdic() {
  G__rootdicLN_TClass.tagnum = -1 ;
  G__rootdicLN_TBuffer.tagnum = -1 ;
  G__rootdicLN_TMemberInspector.tagnum = -1 ;
  G__rootdicLN_TObject.tagnum = -1 ;
  G__rootdicLN_TNamed.tagnum = -1 ;
  G__rootdicLN_TString.tagnum = -1 ;
  G__rootdicLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__rootdicLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__rootdicLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__rootdicLN_ios_base.tagnum = -1 ;
  G__rootdicLN_basic_ioslEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__rootdicLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__rootdicLN_string.tagnum = -1 ;
  G__rootdicLN_basic_ostringstreamlEcharcOchar_traitslEchargRcOallocatorlEchargRsPgR.tagnum = -1 ;
  G__rootdicLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__rootdicLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__rootdicLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__rootdicLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__rootdicLN_GRLStrUtil.tagnum = -1 ;
  G__rootdicLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__rootdicLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__rootdicLN_lesslEstringgR.tagnum = -1 ;
  G__rootdicLN_Root.tagnum = -1 ;
  G__rootdicLN_RootcLcLTMsgLevel.tagnum = -1 ;
  G__rootdicLN_RootcLcLTMsgLogger.tagnum = -1 ;
  G__rootdicLN_maplERootcLcLTMsgLevelcOstringcOlesslERootcLcLTMsgLevelgRcOallocatorlEpairlEconstsPRootcLcLTMsgLevelcOstringgRsPgRsPgR.tagnum = -1 ;
  G__rootdicLN_RootcLcLTUniqueGRLString.tagnum = -1 ;
  G__rootdicLN_RootcLcLTLumiBlockRange.tagnum = -1 ;
  G__rootdicLN_vectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgR.tagnum = -1 ;
  G__rootdicLN_vectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgRcLcLiterator.tagnum = -1 ;
  G__rootdicLN_reverse_iteratorlEvectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__rootdicLN_RootcLcLTGoodRun.tagnum = -1 ;
  G__rootdicLN_RootcLcLTGoodRuncLcLSorterL2H.tagnum = -1 ;
  G__rootdicLN_RootcLcLTGoodRunsList.tagnum = -1 ;
  G__rootdicLN_maplEintcORootcLcLTGoodRuncOlesslEintgRcOallocatorlEpairlEconstsPintcORootcLcLTGoodRungRsPgRsPgR.tagnum = -1 ;
  G__rootdicLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR.tagnum = -1 ;
  G__rootdicLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__rootdicLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__rootdicLN_vectorlERootcLcLTGoodRuncOallocatorlERootcLcLTGoodRungRsPgR.tagnum = -1 ;
  G__rootdicLN_reverse_iteratorlEvectorlERootcLcLTGoodRuncOallocatorlERootcLcLTGoodRungRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__rootdicLN_RootcLcLBoolOperation.tagnum = -1 ;
  G__rootdicLN_RootcLcLTGRLCollection.tagnum = -1 ;
  G__rootdicLN_vectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgR.tagnum = -1 ;
  G__rootdicLN_vectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgRcLcLiterator.tagnum = -1 ;
  G__rootdicLN_reverse_iteratorlEvectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__rootdicLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__rootdicLN_TXMLNode.tagnum = -1 ;
  G__rootdicLN_RootcLcLTGoodRunsListReader.tagnum = -1 ;
  G__rootdicLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__rootdicLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__rootdicLN_reverse_iteratorlEvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__rootdicLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__rootdicLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR.tagnum = -1 ;
  G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__rootdicLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR.tagnum = -1 ;
  G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__rootdicLN_reverse_iteratorlEvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__rootdicLN_allocatorlEpairlEconstsPstringcOboolgRsPgR.tagnum = -1 ;
  G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR.tagnum = -1 ;
  G__rootdicLN_pairlEstringcOboolgR.tagnum = -1 ;
  G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__rootdicLN_pairlEmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiteratorcOboolgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablerootdic() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__rootdicLN_TClass);
   G__get_linked_tagnum_fwd(&G__rootdicLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__rootdicLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__rootdicLN_TObject);
   G__get_linked_tagnum_fwd(&G__rootdicLN_TNamed);
   G__get_linked_tagnum_fwd(&G__rootdicLN_TString);
   G__get_linked_tagnum_fwd(&G__rootdicLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__rootdicLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__rootdicLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__rootdicLN_ios_base);
   G__get_linked_tagnum_fwd(&G__rootdicLN_basic_ioslEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__rootdicLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__rootdicLN_string);
   G__get_linked_tagnum_fwd(&G__rootdicLN_basic_ostringstreamlEcharcOchar_traitslEchargRcOallocatorlEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__rootdicLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__rootdicLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__rootdicLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__rootdicLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__rootdicLN_GRLStrUtil),0,-1,262144,(char*)NULL,G__setup_memvarGRLStrUtil,G__setup_memfuncGRLStrUtil);
   G__get_linked_tagnum_fwd(&G__rootdicLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__rootdicLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__rootdicLN_lesslEstringgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__rootdicLN_Root),0,-1,262144,(char*)NULL,G__setup_memvarRoot,G__setup_memfuncRoot);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__rootdicLN_RootcLcLTMsgLevel),sizeof(int),-1,262144,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__rootdicLN_RootcLcLTMsgLogger),sizeof(Root::TMsgLogger),-1,327424,(char*)NULL,G__setup_memvarRootcLcLTMsgLogger,G__setup_memfuncRootcLcLTMsgLogger);
   G__get_linked_tagnum_fwd(&G__rootdicLN_maplERootcLcLTMsgLevelcOstringcOlesslERootcLcLTMsgLevelgRcOallocatorlEpairlEconstsPRootcLcLTMsgLevelcOstringgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__rootdicLN_RootcLcLTUniqueGRLString),sizeof(Root::TUniqueGRLString),-1,296192,(char*)NULL,G__setup_memvarRootcLcLTUniqueGRLString,G__setup_memfuncRootcLcLTUniqueGRLString);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__rootdicLN_RootcLcLTLumiBlockRange),sizeof(Root::TLumiBlockRange),-1,327424,(char*)NULL,G__setup_memvarRootcLcLTLumiBlockRange,G__setup_memfuncRootcLcLTLumiBlockRange);
   G__get_linked_tagnum_fwd(&G__rootdicLN_vectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgR);
   G__get_linked_tagnum_fwd(&G__rootdicLN_vectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__rootdicLN_reverse_iteratorlEvectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__rootdicLN_RootcLcLTGoodRun),sizeof(Root::TGoodRun),-1,327424,(char*)NULL,G__setup_memvarRootcLcLTGoodRun,G__setup_memfuncRootcLcLTGoodRun);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__rootdicLN_RootcLcLTGoodRuncLcLSorterL2H),sizeof(Root::TGoodRun::SorterL2H),-1,262400,(char*)NULL,G__setup_memvarRootcLcLTGoodRuncLcLSorterL2H,G__setup_memfuncRootcLcLTGoodRuncLcLSorterL2H);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__rootdicLN_RootcLcLTGoodRunsList),sizeof(Root::TGoodRunsList),-1,327424,(char*)NULL,G__setup_memvarRootcLcLTGoodRunsList,G__setup_memfuncRootcLcLTGoodRunsList);
   G__get_linked_tagnum_fwd(&G__rootdicLN_maplEintcORootcLcLTGoodRuncOlesslEintgRcOallocatorlEpairlEconstsPintcORootcLcLTGoodRungRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__rootdicLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__rootdicLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__rootdicLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__rootdicLN_vectorlERootcLcLTGoodRuncOallocatorlERootcLcLTGoodRungRsPgR);
   G__get_linked_tagnum_fwd(&G__rootdicLN_reverse_iteratorlEvectorlERootcLcLTGoodRuncOallocatorlERootcLcLTGoodRungRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__rootdicLN_RootcLcLBoolOperation),sizeof(int),-1,262144,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__rootdicLN_RootcLcLTGRLCollection),sizeof(Root::TGRLCollection),-1,327424,(char*)NULL,G__setup_memvarRootcLcLTGRLCollection,G__setup_memfuncRootcLcLTGRLCollection);
   G__get_linked_tagnum_fwd(&G__rootdicLN_vectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgR);
   G__get_linked_tagnum_fwd(&G__rootdicLN_vectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__rootdicLN_reverse_iteratorlEvectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__rootdicLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__rootdicLN_TXMLNode);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__rootdicLN_RootcLcLTGoodRunsListReader),sizeof(Root::TGoodRunsListReader),-1,324864,(char*)NULL,G__setup_memvarRootcLcLTGoodRunsListReader,G__setup_memfuncRootcLcLTGoodRunsListReader);
   G__get_linked_tagnum_fwd(&G__rootdicLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__rootdicLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR),sizeof(vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__rootdicLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),sizeof(vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__rootdicLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),sizeof(vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__rootdicLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),sizeof(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__rootdicLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR),sizeof(vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__rootdicLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__rootdicLN_reverse_iteratorlEvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__rootdicLN_allocatorlEpairlEconstsPstringcOboolgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),sizeof(map<string,bool,less<string>,allocator<pair<const string,bool> > >),-1,298752,(char*)NULL,G__setup_memvarmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR,G__setup_memfuncmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__rootdicLN_pairlEstringcOboolgR);
   G__get_linked_tagnum_fwd(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__rootdicLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__rootdicLN_pairlEmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiteratorcOboolgR);
}
extern "C" void G__cpp_setuprootdic(void) {
  G__check_setup_version(30051515,"G__cpp_setuprootdic()");
  G__set_cpp_environmentrootdic();
  G__cpp_setup_tagtablerootdic();

  G__cpp_setup_inheritancerootdic();

  G__cpp_setup_typetablerootdic();

  G__cpp_setup_memvarrootdic();

  G__cpp_setup_memfuncrootdic();
  G__cpp_setup_globalrootdic();
  G__cpp_setup_funcrootdic();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncrootdic();
  return;
}
class G__cpp_setup_initrootdic {
  public:
    G__cpp_setup_initrootdic() { G__add_setup_func("rootdic",(G__incsetup)(&G__cpp_setuprootdic)); G__call_setup_funcs(); }
   ~G__cpp_setup_initrootdic() { G__remove_setup_func("rootdic"); }
};
G__cpp_setup_initrootdic G__cpp_setup_initializerrootdic;

